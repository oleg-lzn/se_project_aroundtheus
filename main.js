!function(){"use strict";var e=class{constructor(e,t,s,r,i){let{name:n,link:o,_id:a,isLiked:l}=e;this._name=n,this._link=o,this._isLiked=l,this._id=a,this._cardSelector=t,this._handleImageClick=s,this._handleLikeToggle=r,this.handleDeleteButton=i}_getCardTemplate(){return document.querySelector(this._cardSelector).content.firstElementChild.cloneNode(!0)}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeToggle(this._isLiked)})),this._trashButton.addEventListener("click",(()=>{this.handleDeleteButton(this)})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}updateLikeStatus(e){this._isLiked=e,e?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}_renderCard(){this._cardElement=this._getCardTemplate(),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._cardImage=this._cardElement.querySelector(".card__image"),this._trashButton=this._cardElement.querySelector(".card__delete-button"),this._cardTitle=this._cardElement.querySelector(".card__title"),this._cardTitle.textContent=this._name,this._cardImage.src=this._link,this._cardImage.alt=this._name,this._setEventListeners(),this.updateLikeStatus(this._isLiked)}removeCard(){this._cardElement.remove()}getView(){return this._renderCard(),this._cardElement}},t=class{constructor(e,t){this._form=t,this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}_setEventListeners(){this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputList.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}_showInputError(e,t){const s=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),s.classList.add(this._errorClass),s.textContent=t}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?this.disableButton():this._enableButton()}resetValidation(){this._inputList.forEach((e=>{this._hideInputError(e),e.value=""})),this.disableButton()}};class s{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._container=document.querySelector(t),this._renderer=r}clear(){this._container.innerHTML=""}renderItems(){this.clear(),this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}const r={formSelector:".popup__form",inputSelector:".popup__input",popupImageSelector:".popup__image",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible",closeButtonSelector:".popup__close",popup:".popup",cardsListSelector:".cards__list",cardSelector:".card"},i=(document.querySelector("#card-template").content.firstElementChild,document.querySelector(".profile")),n=(i.querySelector(".profile__title"),i.querySelector(".profile__subtitle"),document.querySelector(".popup")),o=(n.querySelector("[name=name]"),n.querySelector("[name=description]"),document.querySelector(".cards__list"),document.querySelector(".profile__avatar_container")),a=document.getElementById("addElement"),l=(a.querySelector("[name=title]"),a.querySelector("[name=url]"),document.getElementById("imageOpen")),c=(l.querySelector(".popup__image"),l.querySelector(".popup__title-small"),i.querySelector(".profile__edit-button")),d=i.querySelector(".profile__add-button");document.forms["new-card-form"],document.forms["profile-form"],document.querySelector(".spinner");var h=class{constructor(e){this.popupSelector=e,this.popupElement=document.querySelector(this.popupSelector),this._handleEscClose=this._handleEscClose.bind(this)}open(){this.popupElement.classList.add("popup_open"),document.addEventListener("keydown",this._handleEscClose)}close(){this.popupElement.classList.remove("popup_open"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this.popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("popup")||e.target.classList.contains("popup__close"))&&this.close()}))}},u=class extends h{constructor(e){let{popupSelector:t,handleFormSubmit:s}=e;super(t),this._popupForm=this.popupElement.querySelector(".popup__form"),this._submitButton=this._popupForm.querySelector(".popup__button"),this._defaultButtonText=this._submitButton.textContent,this._handleFormSubmit=s,this._inputList=Array.from(this._popupForm.querySelectorAll(".popup__input")),this._setEventListeners()}_getInputValues(){return this._inputList.reduce(((e,t)=>{const{name:s,value:r}=t;return e[s]=r,e}),{})}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitButton.textContent=e?t:this._defaultButtonText}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}getForm(){return this._popupForm}_setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this._handleFormSubmit(t)})),super.setEventListeners()}};const p=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseURL=t,this._headers=s}_checkTheApiResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getUserData(){return fetch(`${this._baseURL}/users/me`,{headers:this._headers}).then((e=>this._checkTheApiResponse(e)))}editProfileData(e){return fetch(`${this._baseURL}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.description})}).then((e=>this._checkTheApiResponse(e)))}getInitialCards(){return fetch(`${this._baseURL}/cards`,{headers:this._headers}).then((e=>this._checkTheApiResponse(e)))}addNewCard(e){return fetch(`${this._baseURL}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e.title,link:e.url,isLiked:e.isLiked,_id:e._id})}).then((e=>this._checkTheApiResponse(e)))}deleteCard(e){return fetch(`${this._baseURL}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>this._checkTheApiResponse(e)))}likeCard(e){return fetch(`${this._baseURL}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then((e=>this._checkTheApiResponse(e)))}dislikeCard(e){return fetch(`${this._baseURL}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then((e=>this._checkTheApiResponse(e)))}avatarUpdate(e){return fetch(`${this._baseURL}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.url})}).then((e=>this._checkTheApiResponse(e)))}loadPageContent(){const e=[this.getInitialCards(),this.getUserData()];return Promise.all(e)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"fbd43f39-bc6f-4ff1-b85c-3a8e63a0b02d","Content-Type":"application/json"}});let _;function m(t){const s=new e(t,"#card-template",(function(){E.open(t),E.setEventListeners()}),(function(e){e?p.dislikeCard(t._id).then((e=>{s.updateLikeStatus(e.isLiked)})).catch((e=>console.error(e))):p.likeCard(t._id).then((e=>{s.updateLikeStatus(e.isLiked)})).catch((e=>console.error(e)))}),(function(e){S.open(t._id,e)}));return s.getView()}p.loadPageContent().then((e=>{let[t,i]=e;v.setUserInfo({name:i.name,description:i.about,avatar:i.avatar}),_=new s({items:t,renderer:e=>{const t=m(e);_.addItem(t)}},r.cardsListSelector),_.renderItems()})).catch((e=>console.error(e)));const E=new class extends h{constructor(e){super(e),this.imageElement=this.popupElement.querySelector(".popup__image"),this.captionElement=this.popupElement.querySelector(".popup__title-small")}open(e){let{link:t,name:s}=e;this.imageElement.src=t,this.imageElement.alt=s,this.captionElement.textContent=s,super.open()}}("#imageOpen"),S=new class extends h{cardId=null;constructor(e){let{popupSelector:t,handleFormSubmit:s}=e;super(t),this._popupForm=this.popupElement.querySelector(".popup__form"),this.handleFormSubmit=s,this._setEventListeners()}_setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this.handleFormSubmit&&"function"==typeof this.handleFormSubmit&&this.handleFormSubmit(this.cardId,this.cardElement)})),super.setEventListeners()}setCardId(e){this.cardId=e}setCardElement(e){this.cardElement=e}open(e,t){this.setCardId(e),this.setCardElement(t),super.open()}}({popupSelector:"#cardDelete",handleFormSubmit:(e,t)=>{p.deleteCard(e).then((()=>{t.removeCard(),S.setCardId(null),S.close()})).catch((e=>console.error("Error deleting the card",e)))}}),L=new u({popupSelector:"#addElement",handleFormSubmit:e=>{L.renderLoading(!0),p.addNewCard(e).then((e=>{const t=m({name:e.name,link:e.link,_id:e._id,isLiked:e.isLiked});_.addItem(t),g["new-card-form"].disableButton(),L.getForm().reset(),L.close()})).catch((e=>console.error(e))).finally((()=>L.renderLoading(!1)))}});d.addEventListener("click",(()=>{L.open()}));const f=new u({popupSelector:"#profileChange",handleFormSubmit:e=>{f.renderLoading(!0),p.editProfileData(e).then((e=>{v.setUserInfo({name:e.name,description:e.about}),f.close()})).catch((e=>console.error(e))).finally((()=>f.renderLoading(!1)))}}),v=new class{constructor(e){let{nameSelector:t,descriptionSelector:s,avatarSelector:r}=e;this._nameElement=document.querySelector(t),this._descriptionElement=document.querySelector(s),this._avatarElement=document.querySelector(r)}getUserInfo(){return{name:this._nameElement.textContent,description:this._descriptionElement.textContent,avatar:this._avatarElement.src}}setUserInfo(e){let{name:t,description:s,avatar:r}=e;this._nameElement.textContent=t,this._descriptionElement.textContent=s,r&&this.setNewAvatar({avatar:r})}setNewAvatar(e){this._avatarElement.src=e.avatar}}({nameSelector:".profile__title",descriptionSelector:".profile__subtitle",avatarSelector:".profile__avatar"}),b=new u({popupSelector:"#profilePicChange",handleFormSubmit:e=>{b.renderLoading(!0),p.avatarUpdate(e).then((e=>{v.setNewAvatar(e),g["profile-pic-change"].disableButton(),b.close(),b.getForm().reset()})).catch((e=>console.error(e))).finally((()=>b.renderLoading(!1)))}});o.addEventListener("click",(()=>{b.open()})),c.addEventListener("click",(()=>{g["profile-form"].resetValidation(),f.open();const e=v.getUserInfo();f.setInputValues(e)}));const g={};(e=>{Array.from(document.querySelectorAll(e.formSelector)).forEach((s=>{const r=new t(e,s),i=s.getAttribute("id");g[i]=r,r.enableValidation()}))})(r)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,