!function(){"use strict";var e=class{constructor(e,t,s){let{name:n,link:r}=e;this._name=n,this._link=r,this._cardSelector=t,this._handleImageClick=s}_getCardTemplate(){return document.querySelector(this._cardSelector).content.firstElementChild.cloneNode(!0)}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeButton()})),this._trashButton.addEventListener("click",(()=>{this._deleteButtonHandler()})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}_renderCard(){this._cardElement=this._getCardTemplate(),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._cardImage=this._cardElement.querySelector(".card__image"),this._trashButton=this._cardElement.querySelector(".card__delete-button"),this._cardTitle=this._cardElement.querySelector(".card__title"),this._cardTitle.textContent=this._name,this._cardImage.src=this._link,this._cardImage.alt=this._name,this._setEventListeners()}_deleteButtonHandler(){this._cardElement.remove(),this._cardElement=null}_handleLikeButton(){this._likeButton.classList.toggle("card__like-button_active")}getView(){return this._renderCard(),this._cardElement}},t=class{constructor(e,t){this._form=t,this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}_setEventListeners(){this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputList.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}_showInputError(e,t){const s=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),s.classList.add(this._errorClass),s.textContent=t}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?this.disableButton():this._enableButton()}resetValidation(){this._inputList.forEach((e=>{this._hideInputError(e),e.value=""})),this.disableButton()}};const s={formSelector:".popup__form",inputSelector:".popup__input",popupImageSelector:".popup__image",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible",closeButtonSelector:".popup__close",popup:".popup",cardsListSelector:".cards__list",cardSelector:".card"},n=(document.querySelector("#card-template").content.firstElementChild,document.querySelector(".profile")),r=(n.querySelector(".profile__title"),n.querySelector(".profile__subtitle"),document.querySelector(".popup")),o=r.querySelector("[name=name]"),i=r.querySelector("[name=description]"),a=(document.querySelector(".cards__list"),document.getElementById("addElement")),l=(a.querySelector("[name=title]"),a.querySelector("[name=url]"),document.getElementById("imageOpen")),c=(l.querySelector(".popup__image"),l.querySelector(".popup__title-small"),n.querySelector(".profile__edit-button")),u=n.querySelector(".profile__add-button");document.forms["new-card-form"],document.forms["profile-form"];var p=class{constructor(e){this.popupSelector=e,this.popupElement=document.querySelector(this.popupSelector),this._handleEscClose=this._handleEscClose.bind(this)}open(){this.popupElement.classList.add("popup_open"),document.addEventListener("keydown",this._handleEscClose)}close(){this.popupElement.classList.remove("popup_open"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this.popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("popup")||e.target.classList.contains("popup__close"))&&this.close()}))}},m=class extends p{constructor(e){let{popupSelector:t,handleFormSubmit:s}=e;super(t),this._popupForm=this.popupElement.querySelector(".popup__form"),this._handleFormSubmit=s,this._inputList=Array.from(this._popupForm.querySelectorAll(".popup__input"))}_getInputValues(){return this._inputList.reduce(((e,t)=>{const{name:s,value:n}=t;return e[s]=n,e}),{})}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this._handleFormSubmit(t),this._popupForm.reset()})),super.setEventListeners()}close(){super.close()}};const d=new class extends p{constructor(e){super(e),this.imageElement=this.popupElement.querySelector(".popup__image"),this.captionElement=this.popupElement.querySelector(".popup__title-small")}open(e){let{link:t,name:s}=e;this.imageElement.src=t,this.imageElement.alt=s,this.captionElement.textContent=s,super.open()}}("#imageOpen");function _(t){return new e(t,"#card-template",(()=>d.open(t))).getView()}const h=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._container=document.querySelector(t),this._renderer=n}clear(){this._container.innerHTML=""}renderItems(){this.clear(),this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{const t=_(e);h.addItem(t)}},s.cardsListSelector);h.renderItems(),d.setEventListeners();const E=new m({popupSelector:"#addElement",handleFormSubmit:e=>{const t=_({name:e.title,link:e.url});h.addItem(t),E.close(),g["new-card-form"].disableButton()}});u.addEventListener("click",(()=>{E.open()})),E.setEventListeners();const S=new m({popupSelector:"#profileChange",handleFormSubmit:e=>{const t=e;f.setUserInfo({name:t.name,description:t.description}),S.close()}}),f=new class{constructor(e){let{nameSelector:t,descriptionSelector:s}=e;this._nameElement=document.querySelector(t),this._descriptionElement=document.querySelector(s)}getUserInfo(){return{name:this._nameElement.textContent,description:this._descriptionElement.textContent}}setUserInfo(e){let{name:t,description:s}=e;this._nameElement.textContent=t,this._descriptionElement.textContent=s}}({nameSelector:".profile__title",descriptionSelector:".profile__subtitle"});c.addEventListener("click",(()=>{g["profile-form"].resetValidation(),S.open();const e=f.getUserInfo();o.value=e.name,i.value=e.description})),S.setEventListeners();const g={};(e=>{Array.from(document.querySelectorAll(e.formSelector)).forEach((s=>{const n=new t(e,s),r=s.getAttribute("id");g[r]=n,n.enableValidation()}))})(s)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,