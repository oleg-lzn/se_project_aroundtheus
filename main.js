!function(){"use strict";var e=class{constructor(e,t,s,r,i,n){let{name:o,link:a,_id:l,isLiked:c}=e;this._name=o,this._link=a,this._isLiked=c,this._id=l,this._cardSelector=t,this._handleImageClick=s,this._handleLikeToggle=r,this.handleCardDelete=n,this.handleDeleteButton=i}_getCardTemplate(){return document.querySelector(this._cardSelector).content.firstElementChild.cloneNode(!0)}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeToggle(this._isLiked)})),this._trashButton.addEventListener("click",(()=>{this.handleDeleteButton(this)})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}updateLikeStatus(e){this._isLiked=e,e?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}_renderCard(){this._cardElement=this._getCardTemplate(),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._cardImage=this._cardElement.querySelector(".card__image"),this._trashButton=this._cardElement.querySelector(".card__delete-button"),this._cardTitle=this._cardElement.querySelector(".card__title"),this._cardTitle.textContent=this._name,this._cardImage.src=this._link,this._cardImage.alt=this._name,this._setEventListeners()}removeCard(){this._cardElement.remove()}getView(){return this._renderCard(),this._cardElement}},t=class{constructor(e,t){this._form=t,this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}_setEventListeners(){this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputList.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}_showInputError(e,t){const s=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),s.classList.add(this._errorClass),s.textContent=t}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?this.disableButton():this._enableButton()}resetValidation(){this._inputList.forEach((e=>{this._hideInputError(e),e.value=""})),this.disableButton()}};class s{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._container=document.querySelector(t),this._renderer=r}clear(){this._container.innerHTML=""}renderItems(){this.clear(),this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}const r={formSelector:".popup__form",inputSelector:".popup__input",popupImageSelector:".popup__image",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible",closeButtonSelector:".popup__close",popup:".popup",cardsListSelector:".cards__list",cardSelector:".card"},i=(document.querySelector("#card-template").content.firstElementChild,document.querySelector(".profile")),n=(i.querySelector(".profile__title"),i.querySelector(".profile__subtitle"),document.querySelector(".popup")),o=(n.querySelector("[name=name]"),n.querySelector("[name=description]"),document.querySelector(".cards__list"),document.querySelector(".profile__avatar_container")),a=document.getElementById("addElement"),l=(a.querySelector("[name=title]"),a.querySelector("[name=url]"),document.getElementById("imageOpen")),c=(l.querySelector(".popup__image"),l.querySelector(".popup__title-small"),i.querySelector(".profile__edit-button")),d=i.querySelector(".profile__add-button");document.forms["new-card-form"],document.forms["profile-form"],document.querySelector(".spinner");var h=class{constructor(e){this.popupSelector=e,this.popupElement=document.querySelector(this.popupSelector),this._handleEscClose=this._handleEscClose.bind(this),this.setEventListeners()}open(){this.popupElement.classList.add("popup_open"),document.addEventListener("keydown",this._handleEscClose)}close(){this.popupElement.classList.remove("popup_open"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this.popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("popup")||e.target.classList.contains("popup__close"))&&this.close()}))}},u=class extends h{constructor(e){let{popupSelector:t,handleFormSubmit:s}=e;super(t),this._popupForm=this.popupElement.querySelector(".popup__form"),this._submitButton=this._popupForm.querySelector(".popup__button"),this._defaultButtonText=this._submitButton.textContent,this._handleFormSubmit=s,this._inputList=Array.from(this._popupForm.querySelectorAll(".popup__input")),this._setEventListeners()}_getInputValues(){return this._inputList.reduce(((e,t)=>{const{name:s,value:r}=t;return e[s]=r,e}),{})}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitButton.textContent=e?t:this._defaultButtonText}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}getForm(){return this._popupForm}_setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this._handleFormSubmit(t)})),super.setEventListeners()}};const p=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseURL=t,this._headers=s}_checkTheApiResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getUserData(){return fetch(`${this._baseURL}/users/me`,{headers:this._headers}).then((e=>this._checkTheApiResponse(e)))}editProfileData(e){return fetch(`${this._baseURL}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.description})}).then((e=>this._checkTheApiResponse(e)))}getInitialCards(){return fetch(`${this._baseURL}/cards`,{headers:this._headers}).then((e=>this._checkTheApiResponse(e)))}addNewCard(e){return fetch(`${this._baseURL}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e.title,link:e.url,isLiked:e.isLiked,_id:e._id})}).then((e=>this._checkTheApiResponse(e)))}deleteCard(e){return fetch(`${this._baseURL}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>this._checkTheApiResponse(e)))}likeCard(e){return fetch(`${this._baseURL}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then((e=>this._checkTheApiResponse(e)))}dislikeCard(e){return fetch(`${this._baseURL}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then((e=>this._checkTheApiResponse(e)))}avatarUpdate(e){return fetch(`${this._baseURL}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.url})}).then((e=>this._checkTheApiResponse(e)))}loadPageContent(){const e=[this.getInitialCards(),this.getUserData()];return Promise.all(e)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"fbd43f39-bc6f-4ff1-b85c-3a8e63a0b02d","Content-Type":"application/json"}});let _;function m(t){const s=new e(t,"#card-template",(function(){E.open(t)}),(function(e){e?p.dislikeCard(t._id).then((e=>{s.updateLikeStatus(e.isLiked)})).catch((e=>console.error(e))):p.likeCard(t._id).then((e=>{s.updateLikeStatus(e.isLiked)})).catch((e=>console.error(e)))}),(function(e){S.open(t._id,e)}),(function(e){console.log(e)}));return s.getView()}p.loadPageContent().then((e=>{let[t,i]=e;L.setUserInfo({name:i.name,description:i.about,avatar:i.avatar}),_=new s({items:t,renderer:e=>{const t=m(e);_.addItem(t)}},r.cardsListSelector),_.renderItems()})).catch((e=>console.error(e)));const E=new class extends h{constructor(e){super(e),this.imageElement=this.popupElement.querySelector(".popup__image"),this.captionElement=this.popupElement.querySelector(".popup__title-small")}open(e){let{link:t,name:s}=e;this.imageElement.src=t,this.imageElement.alt=s,this.captionElement.textContent=s,super.open()}}("#imageOpen"),S=new class extends h{cardId=null;constructor(e){let{popupSelector:t,handleFormSubmit:s}=e;super(t),this._popupForm=this.popupElement.querySelector(".popup__form"),this.handleFormSubmit=s,this._setEventListeners()}_setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this.handleFormSubmit&&"function"==typeof this.handleFormSubmit&&(this.handleFormSubmit(this.cardId,this.cardElement),this.setCardId(null))})),super.setEventListeners()}setCardId(e){this.cardId=e}setCardElement(e){this.cardElement=e}open(e,t){this.setCardId(e),this.setCardElement(t),super.open()}}({popupSelector:"#cardDelete",handleFormSubmit:(e,t)=>{console.log(e),p.deleteCard(e).then((()=>{t.removeCard(),S.close()})).catch((e=>console.error("Error deleting the card",e)))}}),f=new u({popupSelector:"#addElement",handleFormSubmit:e=>{f.renderLoading(!0),p.addNewCard(e).then((e=>{const t=m({name:e.name,link:e.link,_id:e._id,isLiked:e.isLiked});_.addItem(t),g["new-card-form"].disableButton(),f.getForm().reset(),f.close()})).catch((e=>console.error(e))).finally((()=>f.renderLoading(!1)))}});d.addEventListener("click",(()=>{f.open()}));const v=new u({popupSelector:"#profileChange",handleFormSubmit:e=>{v.renderLoading(!0),p.editProfileData(e).then((e=>{L.setUserInfo({name:e.name,description:e.about}),v.close()})).catch((e=>console.error(e))).finally((()=>v.renderLoading(!1)))}}),L=new class{constructor(e){let{nameSelector:t,descriptionSelector:s,avatarSelector:r}=e;this._nameElement=document.querySelector(t),this._descriptionElement=document.querySelector(s),this._avatarElement=document.querySelector(r)}getUserInfo(){return{name:this._nameElement.textContent,description:this._descriptionElement.textContent,avatar:this._avatarElement.src}}setUserInfo(e){let{name:t,description:s,avatar:r}=e;this._nameElement.textContent=t,this._descriptionElement.textContent=s,r&&(this._avatarElement.src=r)}setNewAvatar(e){this._avatarElement.src=e.avatar}}({nameSelector:".profile__title",descriptionSelector:".profile__subtitle",avatarSelector:".profile__avatar"}),b=new u({popupSelector:"#profilePicChange",handleFormSubmit:e=>{b.renderLoading(!0),p.avatarUpdate(e).then((e=>{L.setNewAvatar(e),b.close(),b.getForm().reset()})).catch((e=>console.error(e))).finally((()=>b.renderLoading(!1)))}});o.addEventListener("click",(()=>{b.open()})),c.addEventListener("click",(()=>{g["profile-form"].resetValidation(),v.open();const e=L.getUserInfo();v.setInputValues(e)}));const g={};(e=>{Array.from(document.querySelectorAll(e.formSelector)).forEach((s=>{const r=new t(e,s),i=s.getAttribute("id");g[i]=r,r.enableValidation()}))})(r)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFnQnBHLE1BQU0sSUFHeEJSLEVBQWtCaEYsaUJBQWlCLFNBQVMsS0FDMUMrSyxFQUFlLGdCQUFnQnhILGtCQUMvQjJILEVBQWMxRixPQUNkLE1BQU1xRyxFQUFrQnZCLEVBQVNtQixjQUNqQ1AsRUFBY3BFLGVBQWUrRSxFQUFnQixJQU0vQyxNQUFNZCxFQUFpQixDQUFDLEVBRUVoSyxLQUNQbUIsTUFBTUMsS0FBSzFDLFNBQVMyQyxpQkFBaUJyQixFQUFPSSxlQUNwRG1CLFNBQVN0QixJQUNoQixNQUFNOEssRUFBWSxJQUFJQyxFQUFjaEwsRUFBUUMsR0FDdENnTCxFQUFTaEwsRUFBS2lMLGFBQWEsTUFDakNsQixFQUFlaUIsR0FBVUYsRUFDekJBLEVBQVVoSyxrQkFBa0IsR0FDNUIsRUFHSkEsQ0FBaUJmLEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvdXRpbHMvY29uc3RhbnRzLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL3BhZ2VzL2luZGV4LmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL0FwaS5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Db25mRGVsZXRlUG9wdXAuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgQ2FyZCB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHsgbmFtZSwgbGluaywgX2lkLCBpc0xpa2VkIH0sXG4gICAgY2FyZFNlbGVjdG9yLFxuICAgIGhhbmRsZUltYWdlQ2xpY2ssXG4gICAgaGFuZGxlTGlrZVRvZ2dsZSxcbiAgICBoYW5kbGVEZWxldGVCdXR0b24sXG4gICAgaGFuZGxlQ2FyZERlbGV0ZVxuICApIHtcbiAgICB0aGlzLl9uYW1lID0gbmFtZTtcbiAgICB0aGlzLl9saW5rID0gbGluaztcbiAgICB0aGlzLl9pc0xpa2VkID0gaXNMaWtlZDtcbiAgICB0aGlzLl9pZCA9IF9pZDtcbiAgICB0aGlzLl9jYXJkU2VsZWN0b3IgPSBjYXJkU2VsZWN0b3I7XG4gICAgdGhpcy5faGFuZGxlSW1hZ2VDbGljayA9IGhhbmRsZUltYWdlQ2xpY2s7XG4gICAgdGhpcy5faGFuZGxlTGlrZVRvZ2dsZSA9IGhhbmRsZUxpa2VUb2dnbGU7XG4gICAgdGhpcy5oYW5kbGVDYXJkRGVsZXRlID0gaGFuZGxlQ2FyZERlbGV0ZTtcbiAgICB0aGlzLmhhbmRsZURlbGV0ZUJ1dHRvbiA9IGhhbmRsZURlbGV0ZUJ1dHRvbjtcbiAgfVxuXG4gIC8vIENhcmQgdGVtcGxhdGUgY3JlYXRpb24gYW5kIGNvcHlpbmdcbiAgX2dldENhcmRUZW1wbGF0ZSgpIHtcbiAgICBjb25zdCBjYXJkVGVtcGxhdGUgPSBkb2N1bWVudFxuICAgICAgLnF1ZXJ5U2VsZWN0b3IodGhpcy5fY2FyZFNlbGVjdG9yKVxuICAgICAgLmNvbnRlbnQuZmlyc3RFbGVtZW50Q2hpbGQuY2xvbmVOb2RlKHRydWUpO1xuICAgIHJldHVybiBjYXJkVGVtcGxhdGU7XG4gIH1cblxuICAvLyBMaXN0ZW5lcnMgY3JlYXRpb24gZnVuY3Rpb25cbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX2xpa2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIHRoaXMuX2hhbmRsZUxpa2VUb2dnbGUodGhpcy5faXNMaWtlZCk7XG4gICAgfSk7XG5cbiAgICAvL0RlbGV0ZSBidXR0b25cbiAgICB0aGlzLl90cmFzaEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgdGhpcy5oYW5kbGVEZWxldGVCdXR0b24odGhpcyk7XG4gICAgfSk7XG5cbiAgICAvL0ltYWdlIGhhbmRsZXJcbiAgICB0aGlzLl9jYXJkSW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIHRoaXMuX2hhbmRsZUltYWdlQ2xpY2soeyBuYW1lOiB0aGlzLl9uYW1lLCBsaW5rOiB0aGlzLl9saW5rIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgLy8gTGlrZSBTdGF0dXMgdG9nZ2xlclxuICB1cGRhdGVMaWtlU3RhdHVzKGlzTGlrZWQpIHtcbiAgICB0aGlzLl9pc0xpa2VkID0gaXNMaWtlZDtcbiAgICBpc0xpa2VkXG4gICAgICA/IHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LmFkZChcImNhcmRfX2xpa2UtYnV0dG9uX2FjdGl2ZVwiKVxuICAgICAgOiB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoXCJjYXJkX19saWtlLWJ1dHRvbl9hY3RpdmVcIik7XG4gIH1cblxuICAvLyBDYXJkIGNyZWF0aW9uIGFuZCBsaXN0ZW5lcnMgc2V0dGluZyBmdW5jdGlvblxuICBfcmVuZGVyQ2FyZCgpIHtcbiAgICB0aGlzLl9jYXJkRWxlbWVudCA9IHRoaXMuX2dldENhcmRUZW1wbGF0ZSgpO1xuICAgIHRoaXMuX2xpa2VCdXR0b24gPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xpa2UtYnV0dG9uXCIpO1xuICAgIHRoaXMuX2NhcmRJbWFnZSA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faW1hZ2VcIik7XG4gICAgdGhpcy5fdHJhc2hCdXR0b24gPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2RlbGV0ZS1idXR0b25cIik7XG4gICAgdGhpcy5fY2FyZFRpdGxlID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX190aXRsZVwiKTtcbiAgICB0aGlzLl9jYXJkVGl0bGUudGV4dENvbnRlbnQgPSB0aGlzLl9uYW1lO1xuICAgIHRoaXMuX2NhcmRJbWFnZS5zcmMgPSB0aGlzLl9saW5rO1xuICAgIHRoaXMuX2NhcmRJbWFnZS5hbHQgPSB0aGlzLl9uYW1lO1xuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cblxuICAvLyBDYXJkIFJlbW92YWxcbiAgcmVtb3ZlQ2FyZCgpIHtcbiAgICB0aGlzLl9jYXJkRWxlbWVudC5yZW1vdmUoKTtcbiAgfVxuXG4gIC8vIENhcmQgcmVuZGVyZXJcbiAgZ2V0VmlldygpIHtcbiAgICB0aGlzLl9yZW5kZXJDYXJkKCk7XG4gICAgcmV0dXJuIHRoaXMuX2NhcmRFbGVtZW50O1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IENhcmQ7XG4iLCJjbGFzcyBGb3JtVmFsaWRhdG9yIHtcbiAgY29uc3RydWN0b3IoY29uZmlnLCBmb3JtKSB7XG4gICAgdGhpcy5fZm9ybSA9IGZvcm07XG4gICAgdGhpcy5fZm9ybVNlbGVjdG9yID0gY29uZmlnLmZvcm1TZWxlY3RvcjtcbiAgICB0aGlzLl9pbnB1dFNlbGVjdG9yID0gY29uZmlnLmlucHV0U2VsZWN0b3I7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IgPSBjb25maWcuc3VibWl0QnV0dG9uU2VsZWN0b3I7XG4gICAgdGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyA9IGNvbmZpZy5pbmFjdGl2ZUJ1dHRvbkNsYXNzO1xuICAgIHRoaXMuX2lucHV0RXJyb3JDbGFzcyA9IGNvbmZpZy5pbnB1dEVycm9yQ2xhc3M7XG4gICAgdGhpcy5fZXJyb3JDbGFzcyA9IGNvbmZpZy5lcnJvckNsYXNzO1xuICB9XG5cbiAgLy8gdWx0aW1hdGUgbWV0aG9kIGZvciBmb3JtIHZhbGlkYXRpb25cbiAgZW5hYmxlVmFsaWRhdGlvbigpIHtcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgfSk7XG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgfVxuXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcbiAgICAvLyBsb29rIGZvciB0aGUgaW5wdXRzIGFuZCB0aGUgc3VibWl0IGJ1dHRvbiBpbnNpZGUgdGhlIGZvcm1cbiAgICB0aGlzLl9pbnB1dExpc3QgPSBBcnJheS5mcm9tKFxuICAgICAgdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX2lucHV0U2VsZWN0b3IpXG4gICAgKTtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24gPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IodGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xuICAgIC8vbG9vcCB0aHJvdWdoIHRoZSBpbnB1dHMgdG8gc2VlIGlmIGFsbCBpcyB2YWxpZFxuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcbiAgICAgIGlucHV0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKGV2dCkgPT4ge1xuICAgICAgICAvL2NoZWNrIGlucHV0IHZhbGlkaXR5XG4gICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpO1xuICAgICAgICAvL2Rpc2FibGUgdGhlIGJ1dHRvbiBpZiBpbnB1dCBpcyBub3QgdmFsaWRcbiAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTsgLy8gY2hlY2tcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCwgZXJyb3JNZXNzYWdlKSB7XG4gICAgLy8gY2hlY2sgc2hvdWxkIHdlIHBhc3MgaGVyZSBjb25maWdcbiAgICAvLyBpZiBpbnB1dCBpcyBub3QgdmFsaWQgLSB3ZSdkIGxpa2UgdG8gdGFrZSB0aGUgdmFsaWRhdGlvbiBtZXNzYWdlLFxuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihcbiAgICAgIFwiI1wiICsgYCR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmBcbiAgICApO1xuICAgIC8vIEFkZCBlcnJvciBjbGFzcyB0byB0aGUgaW5wdXQgYW5kIHNob3cgZGlzcGxheSBlcnJvciBtZXNzYWdlLlxuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fZXJyb3JDbGFzcyk7XG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gZXJyb3JNZXNzYWdlO1xuICB9XG5cbiAgX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCkge1xuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihcbiAgICAgIFwiI1wiICsgYCR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmBcbiAgICApO1xuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JDbGFzcyk7XG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gXCJcIjtcbiAgICAvLyBpZiBhbGwgdGhlIGlucHV0cyBhcmUgY29ycmVjdFxuICAgIC8vIHJlc2V0IGVycm9yIG1lc3NhZ2VzXG4gIH1cblxuICBfY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCkge1xuICAgIC8vZm9yIGNoZWNraW5nIHRoZSBpbnB1dCB2YWxpZGl0eVxuICAgIGlmICghaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKSB7XG4gICAgICB0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQsIGlucHV0RWxlbWVudC52YWxpZGF0aW9uTWVzc2FnZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XG4gICAgfVxuICB9XG5cbiAgLy8gVG9nZ2xpbmcgdGhlIGJ1dHRvbiBzdGF0ZVxuICBkaXNhYmxlQnV0dG9uKCkge1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5jbGFzc0xpc3QuYWRkKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5kaXNhYmxlZCA9IHRydWU7XG4gIH1cblxuICBfZW5hYmxlQnV0dG9uKCkge1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5kaXNhYmxlZCA9IGZhbHNlO1xuICB9XG5cbiAgX2hhc0ludmFsaWRJbnB1dCgpIHtcbiAgICByZXR1cm4gdGhpcy5faW5wdXRMaXN0LnNvbWUoKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgcmV0dXJuICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQ7XG4gICAgfSk7XG4gIH1cblxuICBfdG9nZ2xlQnV0dG9uU3RhdGUoKSB7XG4gICAgaWYgKHRoaXMuX2hhc0ludmFsaWRJbnB1dCgpKSB7XG4gICAgICB0aGlzLmRpc2FibGVCdXR0b24oKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fZW5hYmxlQnV0dG9uKCk7XG4gICAgfVxuICB9XG5cbiAgcmVzZXRWYWxpZGF0aW9uKCkge1xuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XG4gICAgICBpbnB1dEVsZW1lbnQudmFsdWUgPSBcIlwiO1xuICAgIH0pO1xuICAgIHRoaXMuZGlzYWJsZUJ1dHRvbigpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEZvcm1WYWxpZGF0b3I7XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcbiAgY29uc3RydWN0b3IoeyBpdGVtcywgcmVuZGVyZXIgfSwgY29udGFpbmVyKSB7XG4gICAgdGhpcy5faXRlbXMgPSBpdGVtcztcbiAgICB0aGlzLl9jb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbnRhaW5lcik7XG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcbiAgfVxuXG4gIGNsZWFyKCkge1xuICAgIHRoaXMuX2NvbnRhaW5lci5pbm5lckhUTUwgPSBcIlwiO1xuICB9XG5cbiAgcmVuZGVySXRlbXMoKSB7XG4gICAgdGhpcy5jbGVhcigpO1xuICAgIHRoaXMuX2l0ZW1zLmZvckVhY2goKGVsZW1lbnQpID0+IHtcbiAgICAgIHRoaXMuX3JlbmRlcmVyKGVsZW1lbnQpO1xuICAgIH0pO1xuICB9XG5cbiAgYWRkSXRlbShlbGVtZW50KSB7XG4gICAgdGhpcy5fY29udGFpbmVyLnByZXBlbmQoZWxlbWVudCk7XG4gIH1cbn1cbiIsIi8vICAge1xuLy8gICAgIG5hbWU6IFwiWW9zZW1pdGUgVmFsbGV5XCIsXG4vLyAgICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L3lvc2VtaXRlLmpwZ1wiLFxuLy8gICB9LFxuXG4vLyAgIHtcbi8vICAgICBuYW1lOiBcIkxha2UgTG91aXNlXCIsXG4vLyAgICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L2xha2UtbG91aXNlLmpwZ1wiLFxuLy8gICB9LFxuXG4vLyAgIHtcbi8vICAgICBuYW1lOiBcIkJhbGQgTW91bnRhaW5zXCIsXG4vLyAgICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L2JhbGQtbW91bnRhaW5zLmpwZ1wiLFxuLy8gICB9LFxuXG4vLyAgIHtcbi8vICAgICBuYW1lOiBcIkxhdGVtYXJcIixcbi8vICAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvbGF0ZW1hci5qcGdcIixcbi8vICAgfSxcblxuLy8gICB7XG4vLyAgICAgbmFtZTogXCJWYW5vaXNlIE5hdGlvbmFsIFBhcmtcIixcbi8vICAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvdmFub2lzZS5qcGdcIixcbi8vICAgfSxcblxuLy8gICB7XG4vLyAgICAgbmFtZTogXCJMYWdvIGRpIEJyYWllc1wiLFxuLy8gICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYWdvLmpwZ1wiLFxuLy8gICB9LFxuLy8gXTtcblxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IHtcbiAgZm9ybVNlbGVjdG9yOiBcIi5wb3B1cF9fZm9ybVwiLFxuICBpbnB1dFNlbGVjdG9yOiBcIi5wb3B1cF9faW5wdXRcIixcbiAgcG9wdXBJbWFnZVNlbGVjdG9yOiBcIi5wb3B1cF9faW1hZ2VcIixcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLnBvcHVwX19idXR0b25cIixcbiAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJwb3B1cF9fYnV0dG9uX2Rpc2FibGVkXCIsXG4gIGlucHV0RXJyb3JDbGFzczogXCJwb3B1cF9faW5wdXRfdHlwZV9lcnJvclwiLFxuICBlcnJvckNsYXNzOiBcInBvcHVwX19lcnJvcl92aXNpYmxlXCIsXG4gIGNsb3NlQnV0dG9uU2VsZWN0b3I6IFwiLnBvcHVwX19jbG9zZVwiLFxuICBwb3B1cDogXCIucG9wdXBcIixcbiAgY2FyZHNMaXN0U2VsZWN0b3I6IFwiLmNhcmRzX19saXN0XCIsXG4gIGNhcmRTZWxlY3RvcjogXCIuY2FyZFwiLFxufTtcblxuLy8gVGVtcGxhdGVzXG5leHBvcnQgY29uc3QgY2FyZFRlbXBsYXRlID1cbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjYXJkLXRlbXBsYXRlXCIpLmNvbnRlbnQuZmlyc3RFbGVtZW50Q2hpbGQ7XG5cbi8vIFZhcmlhYmxlc1xuZXhwb3J0IGNvbnN0IHByb2ZpbGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVcIik7XG5leHBvcnQgY29uc3QgcHJvZmlsZVRpdGxlID0gcHJvZmlsZS5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX3RpdGxlXCIpO1xuZXhwb3J0IGNvbnN0IHByb2ZpbGVTdWJ0aXRsZSA9IHByb2ZpbGUucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19zdWJ0aXRsZVwiKTtcbmV4cG9ydCBjb25zdCBwcm9maWxlTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwXCIpO1xuZXhwb3J0IGNvbnN0IHByb2ZpbGVNb2RhbElucHV0TmFtZSA9IHByb2ZpbGVNb2RhbC5xdWVyeVNlbGVjdG9yKFwiW25hbWU9bmFtZV1cIik7XG5leHBvcnQgY29uc3QgcHJvZmlsZU1vZGFsSW5wdXRTdWJ0aXRsZSA9XG4gIHByb2ZpbGVNb2RhbC5xdWVyeVNlbGVjdG9yKFwiW25hbWU9ZGVzY3JpcHRpb25dXCIpO1xuZXhwb3J0IGNvbnN0IGNhcmRzTGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZHNfX2xpc3RcIik7XG5leHBvcnQgY29uc3QgcHJvZmlsZUF2YXRhckNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gIFwiLnByb2ZpbGVfX2F2YXRhcl9jb250YWluZXJcIlxuKTtcblxuLy8gVmFyaWFibGVzIGZvciB0aGUgQWRkIFBsYWNlIE1vZGFsXG5leHBvcnQgY29uc3QgbW9kYWxBZGRDYXJkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhZGRFbGVtZW50XCIpO1xuZXhwb3J0IGNvbnN0IG1vZGFsQWRkQ2FyZElucHV0UGxhY2UgPVxuICBtb2RhbEFkZENhcmQucXVlcnlTZWxlY3RvcihcIltuYW1lPXRpdGxlXVwiKTtcbmV4cG9ydCBjb25zdCBtb2RhbEFkZENhcmRJbnB1dFVybCA9IG1vZGFsQWRkQ2FyZC5xdWVyeVNlbGVjdG9yKFwiW25hbWU9dXJsXVwiKTtcblxuLy8gVmFyaWFibGVzIGZvciBpbWFnZSBtb2RhbFxuZXhwb3J0IGNvbnN0IG1vZGFsSW1hZ2VQcmV2aWV3ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJpbWFnZU9wZW5cIik7XG5leHBvcnQgY29uc3QgbW9kYWxJbWFnZSA9IG1vZGFsSW1hZ2VQcmV2aWV3LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2ltYWdlXCIpO1xuZXhwb3J0IGNvbnN0IG1vZGFsVGl0bGVTbWFsbCA9IG1vZGFsSW1hZ2VQcmV2aWV3LnF1ZXJ5U2VsZWN0b3IoXG4gIFwiLnBvcHVwX190aXRsZS1zbWFsbFwiXG4pO1xuXG4vLyBCdXR0b25zXG5leHBvcnQgY29uc3QgcHJvZmlsZUJ1dHRvbkVkaXQgPSBwcm9maWxlLnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fZWRpdC1idXR0b25cIik7XG5leHBvcnQgY29uc3QgYWRkQ2FyZEJ1dHRvbiA9IHByb2ZpbGUucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hZGQtYnV0dG9uXCIpO1xuXG4vLyBGb3Jtc1xuZXhwb3J0IGNvbnN0IG1vZGFsQWRkQ2FyZEZvcm0gPSBkb2N1bWVudC5mb3Jtc1tcIm5ldy1jYXJkLWZvcm1cIl07XG5leHBvcnQgY29uc3QgcHJvZmlsZU1vZGFsRm9ybSA9IGRvY3VtZW50LmZvcm1zW1wicHJvZmlsZS1mb3JtXCJdO1xuXG4vLyBTcGlubmVyXG5leHBvcnQgY29uc3Qgc3Bpbm5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc3Bpbm5lclwiKTtcbiIsImNsYXNzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xuICAgIHRoaXMucG9wdXBTZWxlY3RvciA9IHBvcHVwU2VsZWN0b3I7XG4gICAgdGhpcy5wb3B1cEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMucG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5faGFuZGxlRXNjQ2xvc2UgPSB0aGlzLl9oYW5kbGVFc2NDbG9zZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgfVxuXG4gIG9wZW4oKSB7XG4gICAgdGhpcy5wb3B1cEVsZW1lbnQuY2xhc3NMaXN0LmFkZChcInBvcHVwX29wZW5cIik7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgdGhpcy5wb3B1cEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShcInBvcHVwX29wZW5cIik7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xuICB9XG5cbiAgX2hhbmRsZUVzY0Nsb3NlKGV2dCkge1xuICAgIGlmIChldnQua2V5ID09PSBcIkVzY2FwZVwiKSB7XG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfVxuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5wb3B1cEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLCAoZXZ0KSA9PiB7XG4gICAgICBpZiAoXG4gICAgICAgIGV2dC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwicG9wdXBcIikgfHxcbiAgICAgICAgZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJwb3B1cF9fY2xvc2VcIilcbiAgICAgICkge1xuICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUG9wdXA7XG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXBcIjtcblxuY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IoeyBwb3B1cFNlbGVjdG9yLCBoYW5kbGVGb3JtU3VibWl0IH0pIHtcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcbiAgICB0aGlzLl9wb3B1cEZvcm0gPSB0aGlzLnBvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19mb3JtXCIpO1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbiA9IHRoaXMuX3BvcHVwRm9ybS5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19idXR0b25cIik7XG4gICAgdGhpcy5fZGVmYXVsdEJ1dHRvblRleHQgPSB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQ7XG4gICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCA9IGhhbmRsZUZvcm1TdWJtaXQ7XG4gICAgdGhpcy5faW5wdXRMaXN0ID0gQXJyYXkuZnJvbShcbiAgICAgIHRoaXMuX3BvcHVwRm9ybS5xdWVyeVNlbGVjdG9yQWxsKFwiLnBvcHVwX19pbnB1dFwiKVxuICAgICk7XG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgfVxuXG4gIC8vIFVzZXIgSW5wdXQgdmFsdWVzIGdldHRlciBhbmQgcmV0dXJuaW5nIGFuIG9iamVjdCB3aXRoIHRoZW1cbiAgX2dldElucHV0VmFsdWVzKCkge1xuICAgIGNvbnN0IHVzZXJJbnB1dCA9IHRoaXMuX2lucHV0TGlzdC5yZWR1Y2UoKGFjYywgaW5wdXQpID0+IHtcbiAgICAgIGNvbnN0IHsgbmFtZSwgdmFsdWUgfSA9IGlucHV0O1xuICAgICAgYWNjW25hbWVdID0gdmFsdWU7XG4gICAgICByZXR1cm4gYWNjO1xuICAgIH0sIHt9KTtcbiAgICByZXR1cm4gdXNlcklucHV0O1xuICB9XG5cbiAgcmVuZGVyTG9hZGluZyhpc0xvYWRpbmcsIGxvYWRpbmdUZXh0ID0gXCJTYXZpbmcuLi5cIikge1xuICAgIGlmIChpc0xvYWRpbmcpIHtcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudCA9IGxvYWRpbmdUZXh0O1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSB0aGlzLl9kZWZhdWx0QnV0dG9uVGV4dDtcbiAgICB9XG4gIH1cblxuICAvLyBVc2VyIGlucHV0IHZhbHVlcyBzZXR0ZXJcbiAgc2V0SW5wdXRWYWx1ZXMoZGF0YSkge1xuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dCkgPT4ge1xuICAgICAgaW5wdXQudmFsdWUgPSBkYXRhW2lucHV0Lm5hbWVdO1xuICAgIH0pO1xuICB9XG5cbiAgZ2V0Rm9ybSgpIHtcbiAgICByZXR1cm4gdGhpcy5fcG9wdXBGb3JtO1xuICB9XG5cbiAgLy8gRXZlbnQgTGlzdGVuZXJzIHNldHRlciBhbmQgc3VibWl0IGxvZ2ljc1xuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5fcG9wdXBGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBjb25zdCBpbnB1dFZhbHVlcyA9IHRoaXMuX2dldElucHV0VmFsdWVzKCk7XG4gICAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0KGlucHV0VmFsdWVzKTtcbiAgICB9KTtcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFBvcHVwV2l0aEZvcm07XG4iLCIvLyBJbXBvcnQgYWxsIHRoZSBjbGFzc2VzXG5pbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkLmpzXCI7XG5pbXBvcnQgRm9ybVZhbGlkYXRvciBmcm9tIFwiLi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzXCI7XG5pbXBvcnQgXCIuLi9wYWdlcy9pbmRleC5jc3NcIjtcbmltcG9ydCBTZWN0aW9uIGZyb20gXCIuLi9jb21wb25lbnRzL1NlY3Rpb24uanNcIjtcbmltcG9ydCB7XG4gIGFkZENhcmRCdXR0b24sXG4gIHByb2ZpbGVBdmF0YXJDb250YWluZXIsXG4gIHByb2ZpbGVCdXR0b25FZGl0LFxufSBmcm9tIFwiLi4vdXRpbHMvY29uc3RhbnRzLmpzXCI7XG5pbXBvcnQgeyBjb25maWcgfSBmcm9tIFwiLi4vdXRpbHMvY29uc3RhbnRzLmpzXCI7XG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanNcIjtcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanNcIjtcbmltcG9ydCBVc2VySW5mbyBmcm9tIFwiLi4vY29tcG9uZW50cy9Vc2VySW5mby5qc1wiO1xuaW1wb3J0IEFwaSBmcm9tIFwiLi4vY29tcG9uZW50cy9BcGkuanNcIjtcbmltcG9ydCBDb25maXJtRGVsZXRlUG9wdXAgZnJvbSBcIi4uL2NvbXBvbmVudHMvQ29uZkRlbGV0ZVBvcHVwLmpzXCI7XG5cbi8vIEFwaSBJbml0aWFsaXphdGlvblxuZXhwb3J0IGNvbnN0IGFwaSA9IG5ldyBBcGkoe1xuICBiYXNlVXJsOiBcImh0dHBzOi8vYXJvdW5kLWFwaS5lbi50cmlwbGV0ZW4tc2VydmljZXMuY29tL3YxXCIsXG4gIGhlYWRlcnM6IHtcbiAgICBhdXRob3JpemF0aW9uOiBcImZiZDQzZjM5LWJjNmYtNGZmMS1iODVjLTNhOGU2M2EwYjAyZFwiLFxuICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICB9LFxufSk7XG5cbi8vIENBUkRTIEFORCBQQUdFIFJFTkRFUklOR1xuLy8gR2V0dGluZyB0aGUgdXNlciBkYXRhIGFuZCB0aGUgaW5pdGlhbCBjYXJkcyBvbiB0aGUgaW5pdGlhbCBwYWdlIGxvYWRpbmdcblxubGV0IGNhcmRzTGlzdDsgLy8g0L/RgNCw0LLQuNC70YzQvdC+INC70Lgg0YLQsNC6Pz8/INCR0YvQu9C+INGA0LDQvdGM0YjQtSDQutCw0Log0LLQvdC40LfRgywg0YLQtdC/0LXRgNGMIENhcmRzTGlzdCDQvtCx0YrRj9Cy0LvQtdC90LAg0YLQsNC6LCDRh9GC0L7QsdGLINC40YHQv9C+0LvRjNC30L7QstCw0YLRjNGB0Y8g0LIg0L/QvtC/0LDQv9C1XG5cbmFwaVxuICAubG9hZFBhZ2VDb250ZW50KClcbiAgLnRoZW4oKFtpbml0aWFsQ2FyZHMsIHVzZXJEYXRhXSkgPT4ge1xuICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKHtcbiAgICAgIG5hbWU6IHVzZXJEYXRhLm5hbWUsXG4gICAgICBkZXNjcmlwdGlvbjogdXNlckRhdGEuYWJvdXQsXG4gICAgICBhdmF0YXI6IHVzZXJEYXRhLmF2YXRhcixcbiAgICB9KTtcblxuICAgIGNhcmRzTGlzdCA9IG5ldyBTZWN0aW9uKFxuICAgICAge1xuICAgICAgICBpdGVtczogaW5pdGlhbENhcmRzLFxuICAgICAgICByZW5kZXJlcjogKGl0ZW0pID0+IHtcbiAgICAgICAgICBjb25zdCBuZXdDYXJkID0gY3JlYXRlQ2FyZChpdGVtKTtcbiAgICAgICAgICBjYXJkc0xpc3QuYWRkSXRlbShuZXdDYXJkKTtcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgICBjb25maWcuY2FyZHNMaXN0U2VsZWN0b3JcbiAgICApO1xuXG4gICAgY2FyZHNMaXN0LnJlbmRlckl0ZW1zKCk7XG4gIH0pXG4gIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmVycm9yKGVycikpO1xuXG4vLyBDYXJkIGNyZWF0aW9uIGZ1bmN0aW9uXG5mdW5jdGlvbiBjcmVhdGVDYXJkKGl0ZW0pIHtcbiAgZnVuY3Rpb24gaGFuZGxlSW1hZ2VDbGljaygpIHtcbiAgICBpbWFnZVBvcHVwLm9wZW4oaXRlbSk7XG4gIH1cbiAgZnVuY3Rpb24gaGFuZGxlTGlrZVRvZ2dsZShpc0xpa2VkKSB7XG4gICAgaWYgKGlzTGlrZWQpIHtcbiAgICAgIGFwaVxuICAgICAgICAuZGlzbGlrZUNhcmQoaXRlbS5faWQpXG4gICAgICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICAgICBjYXJkRWxlbWVudC51cGRhdGVMaWtlU3RhdHVzKHJlcy5pc0xpa2VkKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUuZXJyb3IoZXJyKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaVxuICAgICAgICAubGlrZUNhcmQoaXRlbS5faWQpXG4gICAgICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICAgICBjYXJkRWxlbWVudC51cGRhdGVMaWtlU3RhdHVzKHJlcy5pc0xpa2VkKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUuZXJyb3IoZXJyKSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlRGVsZXRlQnV0dG9uKGNhcmRFbGVtZW50KSB7XG4gICAgY29uZmlybVBvcHVwLm9wZW4oaXRlbS5faWQsIGNhcmRFbGVtZW50KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZUNhcmREZWxldGUoY2FyZElkKSB7XG4gICAgY29uc29sZS5sb2coY2FyZElkKTtcbiAgfVxuXG4gIGNvbnN0IGNhcmRFbGVtZW50ID0gbmV3IENhcmQoXG4gICAgaXRlbSxcbiAgICBcIiNjYXJkLXRlbXBsYXRlXCIsXG4gICAgLy8gaW1hZ2UgcG9wdXAgY2FsbGJhY2tcbiAgICBoYW5kbGVJbWFnZUNsaWNrLFxuICAgIC8vIGxpa2UgaGFuZGxlciBjYWxsYmFja1xuICAgIGhhbmRsZUxpa2VUb2dnbGUsXG4gICAgLy8gZGVsZXRlIHBvcHVwIG9wZW4gaGFuZGxlclxuICAgIGhhbmRsZURlbGV0ZUJ1dHRvbixcbiAgICAvLyBkZWxldGUgcG9wdXAgc3VibWl0IGhhbmRsZXJcbiAgICBoYW5kbGVDYXJkRGVsZXRlXG4gICk7XG4gIHJldHVybiBjYXJkRWxlbWVudC5nZXRWaWV3KCk7XG59XG5cbi8vIFBPUFVQU1xuXG4vLyBDcmVhdGluZyBhIGNhcmQgaW1hZ2UgcG9wdXBcbmNvbnN0IGltYWdlUG9wdXAgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoXCIjaW1hZ2VPcGVuXCIpO1xuXG4vLyBDYXJkIGRlbGV0ZSBjb25maXJtYXRpb24gcG9wdXBcbmNvbnN0IGNvbmZpcm1Qb3B1cCA9IG5ldyBDb25maXJtRGVsZXRlUG9wdXAoe1xuICBwb3B1cFNlbGVjdG9yOiBcIiNjYXJkRGVsZXRlXCIsXG4gIGhhbmRsZUZvcm1TdWJtaXQ6IChjYXJkSWQsIGNhcmRFbGVtZW50KSA9PiB7XG4gICAgY29uc29sZS5sb2coY2FyZElkKTtcbiAgICBhcGlcbiAgICAgIC5kZWxldGVDYXJkKGNhcmRJZClcbiAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgY2FyZEVsZW1lbnQucmVtb3ZlQ2FyZCgpO1xuICAgICAgICBjb25maXJtUG9wdXAuY2xvc2UoKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5lcnJvcihcIkVycm9yIGRlbGV0aW5nIHRoZSBjYXJkXCIsIGVycikpO1xuICB9LCAvLyDQsiDQutC+0LvQsdGN0Log0L3QsNC00L4g0L/QtdGA0LXQtNCw0LLQsNGC0Ywg0LjQvdGE0L7RgNC80LDRhtC40Y4g0L4g0YLQvtC8LCDQutCw0LrQsNGPINC60LDRgNGC0L7Rh9C60LAg0LHRg9C00LXRgiDRg9C00LDQu9C10L3QsFxufSk7XG5cbi8vIENyZWF0aW5nIGEgcG9wdXAgd2l0aCBhZGQgY2FyZCBmb3JtXG5jb25zdCBuZXdDYXJkUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybSh7XG4gIHBvcHVwU2VsZWN0b3I6IFwiI2FkZEVsZW1lbnRcIixcbiAgaGFuZGxlRm9ybVN1Ym1pdDogKHVzZXJJbnB1dCkgPT4ge1xuICAgIG5ld0NhcmRQb3B1cC5yZW5kZXJMb2FkaW5nKHRydWUpO1xuICAgIGFwaVxuICAgICAgLmFkZE5ld0NhcmQodXNlcklucHV0KVxuICAgICAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgICAgY29uc3QgbmV3VXNlckNhcmQgPSBjcmVhdGVDYXJkKHtcbiAgICAgICAgICBuYW1lOiBkYXRhLm5hbWUsXG4gICAgICAgICAgbGluazogZGF0YS5saW5rLFxuICAgICAgICAgIF9pZDogZGF0YS5faWQsIC8vINCg0LDQt9C+0LHRgNCw0YLRjNGB0Y8g0YEg0L/QtdGA0LXQtNCw0YfQtdC5INC00LDQvdC90YvRhSDQv9GA0Lgg0YHQvtC30LTQsNC90LjQuCDQutCw0YDRgtC+0YfQutC4XG4gICAgICAgICAgaXNMaWtlZDogZGF0YS5pc0xpa2VkLFxuICAgICAgICB9KTtcbiAgICAgICAgY2FyZHNMaXN0LmFkZEl0ZW0obmV3VXNlckNhcmQpOyAvLyDQt9C00LXRgdGMINC60L7QvdGC0LXQudC90LXRgCDQsiDRgdGC0LDRgtGD0YHQtSB1bmRlZmluZWQsINC/0L7RgtC+0LzRgyDRh9GC0L4g0L7QvSDQvdC1INCyINCz0LvQvtCx0LDQu9GM0L3QvtC8INGB0LrQvtGD0L/QtVxuICAgICAgICBmb3JtVmFsaWRhdG9yc1tcIm5ldy1jYXJkLWZvcm1cIl0uZGlzYWJsZUJ1dHRvbigpO1xuICAgICAgICBuZXdDYXJkUG9wdXAuZ2V0Rm9ybSgpLnJlc2V0KCk7XG4gICAgICAgIG5ld0NhcmRQb3B1cC5jbG9zZSgpO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmVycm9yKGVycikpXG4gICAgICAuZmluYWxseSgoKSA9PiBuZXdDYXJkUG9wdXAucmVuZGVyTG9hZGluZyhmYWxzZSkpO1xuICB9LFxufSk7XG5cbi8vIEFkZCBuZXcgY2FyZCBidXR0b24gaGFuZGxlclxuYWRkQ2FyZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICBuZXdDYXJkUG9wdXAub3BlbigpO1xufSk7XG5cbi8vIFVzZXJJbmZvIFBvcHVwXG5jb25zdCB1c2VyUG9wdXBGb3JtID0gbmV3IFBvcHVwV2l0aEZvcm0oe1xuICBwb3B1cFNlbGVjdG9yOiBcIiNwcm9maWxlQ2hhbmdlXCIsXG4gIGhhbmRsZUZvcm1TdWJtaXQ6ICh1c2VySW5wdXQpID0+IHtcbiAgICB1c2VyUG9wdXBGb3JtLnJlbmRlckxvYWRpbmcodHJ1ZSk7XG4gICAgYXBpXG4gICAgICAuZWRpdFByb2ZpbGVEYXRhKHVzZXJJbnB1dClcbiAgICAgIC50aGVuKChkYXRhKSA9PiB7XG4gICAgICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKHtcbiAgICAgICAgICBuYW1lOiBkYXRhLm5hbWUsXG4gICAgICAgICAgZGVzY3JpcHRpb246IGRhdGEuYWJvdXQsXG4gICAgICAgIH0pO1xuICAgICAgICB1c2VyUG9wdXBGb3JtLmNsb3NlKCk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUuZXJyb3IoZXJyKSlcbiAgICAgIC5maW5hbGx5KCgpID0+IHVzZXJQb3B1cEZvcm0ucmVuZGVyTG9hZGluZyhmYWxzZSkpO1xuICB9LFxufSk7XG5cbi8vIFBST0ZJTEUgSU5GTyBDSEFOR0VTXG5cbi8vIFVzZXIgSW5mbyBhbmQgQXZhdGFyIENoYW5nZVxuY29uc3QgdXNlckluZm8gPSBuZXcgVXNlckluZm8oe1xuICBuYW1lU2VsZWN0b3I6IFwiLnByb2ZpbGVfX3RpdGxlXCIsXG4gIGRlc2NyaXB0aW9uU2VsZWN0b3I6IFwiLnByb2ZpbGVfX3N1YnRpdGxlXCIsXG4gIGF2YXRhclNlbGVjdG9yOiBcIi5wcm9maWxlX19hdmF0YXJcIixcbn0pO1xuXG4vL1Byb2ZpbGUgQXZhdGFyIENoYW5nZVxuY29uc3QgcHJvZmlsZVBpY1BvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oe1xuICBwb3B1cFNlbGVjdG9yOiBcIiNwcm9maWxlUGljQ2hhbmdlXCIsXG4gIGhhbmRsZUZvcm1TdWJtaXQ6IChpbnB1dFZhbHVlcykgPT4ge1xuICAgIHByb2ZpbGVQaWNQb3B1cC5yZW5kZXJMb2FkaW5nKHRydWUpO1xuICAgIGFwaVxuICAgICAgLmF2YXRhclVwZGF0ZShpbnB1dFZhbHVlcylcbiAgICAgIC50aGVuKChkYXRhKSA9PiB7XG4gICAgICAgIHVzZXJJbmZvLnNldE5ld0F2YXRhcihkYXRhKTtcbiAgICAgICAgcHJvZmlsZVBpY1BvcHVwLmNsb3NlKCk7XG4gICAgICAgIHByb2ZpbGVQaWNQb3B1cC5nZXRGb3JtKCkucmVzZXQoKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5lcnJvcihlcnIpKVxuICAgICAgLmZpbmFsbHkoKCkgPT4gcHJvZmlsZVBpY1BvcHVwLnJlbmRlckxvYWRpbmcoZmFsc2UpKTtcbiAgfSxcbn0pO1xuXG5wcm9maWxlQXZhdGFyQ29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIHByb2ZpbGVQaWNQb3B1cC5vcGVuKCk7XG59KTtcblxucHJvZmlsZUJ1dHRvbkVkaXQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgZm9ybVZhbGlkYXRvcnNbXCJwcm9maWxlLWZvcm1cIl0ucmVzZXRWYWxpZGF0aW9uKCk7XG4gIHVzZXJQb3B1cEZvcm0ub3BlbigpO1xuICBjb25zdCBjdXJyZW50VXNlckRhdGEgPSB1c2VySW5mby5nZXRVc2VySW5mbygpO1xuICB1c2VyUG9wdXBGb3JtLnNldElucHV0VmFsdWVzKGN1cnJlbnRVc2VyRGF0YSk7XG59KTtcblxuLy9WQUxJREFUSU9OXG5cbi8vIFVuaXZlcnNhbCBoYW5kbGVyIGZvciBmb3JtcyB2YWxpZGF0aW9uXG5jb25zdCBmb3JtVmFsaWRhdG9ycyA9IHt9O1xuXG5jb25zdCBlbmFibGVWYWxpZGF0aW9uID0gKGNvbmZpZykgPT4ge1xuICBjb25zdCBmb3JtTGlzdCA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChjb25maWcuZm9ybVNlbGVjdG9yKSk7XG4gIGZvcm1MaXN0LmZvckVhY2goKGZvcm0pID0+IHtcbiAgICBjb25zdCB2YWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihjb25maWcsIGZvcm0pO1xuICAgIGNvbnN0IGZvcm1JZCA9IGZvcm0uZ2V0QXR0cmlidXRlKFwiaWRcIik7XG4gICAgZm9ybVZhbGlkYXRvcnNbZm9ybUlkXSA9IHZhbGlkYXRvcjtcbiAgICB2YWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xuICB9KTtcbn07XG5cbmVuYWJsZVZhbGlkYXRpb24oY29uZmlnKTtcblxuZXhwb3J0IGRlZmF1bHQgY29uZmlybVBvcHVwO1xuIiwiY2xhc3MgQXBpIHtcbiAgY29uc3RydWN0b3IoeyBiYXNlVXJsLCBoZWFkZXJzIH0pIHtcbiAgICB0aGlzLl9iYXNlVVJMID0gYmFzZVVybDtcbiAgICB0aGlzLl9oZWFkZXJzID0gaGVhZGVycztcbiAgfVxuXG4gIF9jaGVja1RoZUFwaVJlc3BvbnNlKHJlcykge1xuICAgIGlmIChyZXMub2spIHtcbiAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgIH0gZWxzZSByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XG4gIH1cblxuICBnZXRVc2VyRGF0YSgpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVSTH0vdXNlcnMvbWVgLCB7XG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pLnRoZW4oKHJlcykgPT4gdGhpcy5fY2hlY2tUaGVBcGlSZXNwb25zZShyZXMpKTtcbiAgfVxuXG4gIGVkaXRQcm9maWxlRGF0YSh1c2VySW5wdXQpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVSTH0vdXNlcnMvbWVgLCB7XG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIG5hbWU6IHVzZXJJbnB1dC5uYW1lLFxuICAgICAgICBhYm91dDogdXNlcklucHV0LmRlc2NyaXB0aW9uLFxuICAgICAgfSksXG4gICAgfSkudGhlbigocmVzKSA9PiB0aGlzLl9jaGVja1RoZUFwaVJlc3BvbnNlKHJlcykpO1xuICB9XG5cbiAgZ2V0SW5pdGlhbENhcmRzKCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVVJMfS9jYXJkc2AsIHtcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgfSkudGhlbigocmVzKSA9PiB0aGlzLl9jaGVja1RoZUFwaVJlc3BvbnNlKHJlcykpO1xuICB9XG5cbiAgYWRkTmV3Q2FyZChuZXdDYXJkKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVUkx9L2NhcmRzYCwge1xuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIG5hbWU6IG5ld0NhcmQudGl0bGUsXG4gICAgICAgIGxpbms6IG5ld0NhcmQudXJsLFxuICAgICAgICBpc0xpa2VkOiBuZXdDYXJkLmlzTGlrZWQsXG4gICAgICAgIF9pZDogbmV3Q2FyZC5faWQsXG4gICAgICB9KSxcbiAgICB9KS50aGVuKChyZXMpID0+IHRoaXMuX2NoZWNrVGhlQXBpUmVzcG9uc2UocmVzKSk7XG4gIH1cblxuICBkZWxldGVDYXJkKGNhcmRJZCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVVJMfS9jYXJkcy8ke2NhcmRJZH1gLCB7XG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pLnRoZW4oKHJlcykgPT4gdGhpcy5fY2hlY2tUaGVBcGlSZXNwb25zZShyZXMpKTtcbiAgfVxuXG4gIGxpa2VDYXJkKGNhcmRJZCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVVJMfS9jYXJkcy8ke2NhcmRJZH0vbGlrZXNgLCB7XG4gICAgICBtZXRob2Q6IFwiUFVUXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pLnRoZW4oKHJlcykgPT4gdGhpcy5fY2hlY2tUaGVBcGlSZXNwb25zZShyZXMpKTtcbiAgfVxuXG4gIGRpc2xpa2VDYXJkKGNhcmRJZCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVVJMfS9jYXJkcy8ke2NhcmRJZH0vbGlrZXNgLCB7XG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pLnRoZW4oKHJlcykgPT4gdGhpcy5fY2hlY2tUaGVBcGlSZXNwb25zZShyZXMpKTtcbiAgfVxuXG4gIGF2YXRhclVwZGF0ZShpbnB1dFZhbHVlcykge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVVJMfS91c2Vycy9tZS9hdmF0YXJgLCB7XG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIGF2YXRhcjogaW5wdXRWYWx1ZXMudXJsLFxuICAgICAgfSksXG4gICAgfSkudGhlbigocmVzKSA9PiB0aGlzLl9jaGVja1RoZUFwaVJlc3BvbnNlKHJlcykpO1xuICB9XG5cbiAgbG9hZFBhZ2VDb250ZW50KCkge1xuICAgIGNvbnN0IHByb21pc2VzID0gW3RoaXMuZ2V0SW5pdGlhbENhcmRzKCksIHRoaXMuZ2V0VXNlckRhdGEoKV07XG4gICAgcmV0dXJuIFByb21pc2UuYWxsKHByb21pc2VzKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBBcGk7XG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXBcIjtcblxuY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcbiAgICB0aGlzLmltYWdlRWxlbWVudCA9IHRoaXMucG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2ltYWdlXCIpO1xuICAgIHRoaXMuY2FwdGlvbkVsZW1lbnQgPSB0aGlzLnBvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgXCIucG9wdXBfX3RpdGxlLXNtYWxsXCJcbiAgICApO1xuICB9XG5cbiAgb3Blbih7IGxpbmssIG5hbWUgfSkge1xuICAgIHRoaXMuaW1hZ2VFbGVtZW50LnNyYyA9IGxpbms7XG4gICAgdGhpcy5pbWFnZUVsZW1lbnQuYWx0ID0gbmFtZTtcbiAgICB0aGlzLmNhcHRpb25FbGVtZW50LnRleHRDb250ZW50ID0gbmFtZTtcbiAgICBzdXBlci5vcGVuKCk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUG9wdXBXaXRoSW1hZ2U7XG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXBcIjtcblxuY2xhc3MgQ29uZmlybURlbGV0ZVBvcHVwIGV4dGVuZHMgUG9wdXAge1xuICBjYXJkSWQgPSBudWxsO1xuICBjb25zdHJ1Y3Rvcih7IHBvcHVwU2VsZWN0b3IsIGhhbmRsZUZvcm1TdWJtaXQgfSkge1xuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xuICAgIHRoaXMuX3BvcHVwRm9ybSA9IHRoaXMucG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Zvcm1cIik7XG4gICAgdGhpcy5oYW5kbGVGb3JtU3VibWl0ID0gaGFuZGxlRm9ybVN1Ym1pdDtcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuICB9XG5cbiAgLy8gRXZlbnQgTGlzdGVuZXJzIHNldHRlciBhbmQgc3VibWl0IGxvZ2ljc1xuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5fcG9wdXBGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBpZiAoXG4gICAgICAgIHRoaXMuaGFuZGxlRm9ybVN1Ym1pdCAmJlxuICAgICAgICB0eXBlb2YgdGhpcy5oYW5kbGVGb3JtU3VibWl0ID09PSBcImZ1bmN0aW9uXCJcbiAgICAgICkge1xuICAgICAgICAvLyDQt9C00LXRgdGMINC00L7Qu9C20L3QsCDQv9C+0LTRgtGP0LPQuNCy0LDRgtGM0YHRjyDQuNC90YTQvtGA0LzQsNGG0LjRjyDQviDQutCw0YDRgtC+0YfQutC1LCDQutC+0YLQvtGA0LDRjyDQsdGD0LTQtdGCINGD0LTQsNC70LXQvdCwXG4gICAgICAgIHRoaXMuaGFuZGxlRm9ybVN1Ym1pdCh0aGlzLmNhcmRJZCwgdGhpcy5jYXJkRWxlbWVudCk7IC8vINGB0Y7QtNCwINC90LDQtNC+INC/0LXRgNC10LTQsNCy0LDRgtGMINC40L3RhNC+0YDQvNCw0YbQuNGOINC+INC60LDRgNGC0L7Rh9C60LVcbiAgICAgICAgdGhpcy5zZXRDYXJkSWQobnVsbCk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgfVxuXG4gIHNldENhcmRJZChjYXJkSWQpIHtcbiAgICB0aGlzLmNhcmRJZCA9IGNhcmRJZDtcbiAgfVxuXG4gIHNldENhcmRFbGVtZW50KGNhcmRFbGVtZW50KSB7XG4gICAgdGhpcy5jYXJkRWxlbWVudCA9IGNhcmRFbGVtZW50O1xuICB9XG5cbiAgb3BlbihjYXJkSWQsIGNhcmRFbGVtZW50KSB7XG4gICAgdGhpcy5zZXRDYXJkSWQoY2FyZElkKTtcbiAgICB0aGlzLnNldENhcmRFbGVtZW50KGNhcmRFbGVtZW50KTtcbiAgICBzdXBlci5vcGVuKCk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQ29uZmlybURlbGV0ZVBvcHVwO1xuIiwiY2xhc3MgVXNlckluZm8ge1xuICBjb25zdHJ1Y3Rvcih7IG5hbWVTZWxlY3RvciwgZGVzY3JpcHRpb25TZWxlY3RvciwgYXZhdGFyU2VsZWN0b3IgfSkge1xuICAgIHRoaXMuX25hbWVFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihuYW1lU2VsZWN0b3IpO1xuICAgIHRoaXMuX2Rlc2NyaXB0aW9uRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZGVzY3JpcHRpb25TZWxlY3Rvcik7XG4gICAgdGhpcy5fYXZhdGFyRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYXZhdGFyU2VsZWN0b3IpO1xuICB9XG5cbiAgLy8gVXNlciBDdXJyZW50IEluZm8gZ2V0dGVyXG4gIGdldFVzZXJJbmZvKCkge1xuICAgIHJldHVybiB7XG4gICAgICBuYW1lOiB0aGlzLl9uYW1lRWxlbWVudC50ZXh0Q29udGVudCxcbiAgICAgIGRlc2NyaXB0aW9uOiB0aGlzLl9kZXNjcmlwdGlvbkVsZW1lbnQudGV4dENvbnRlbnQsXG4gICAgICBhdmF0YXI6IHRoaXMuX2F2YXRhckVsZW1lbnQuc3JjLFxuICAgIH07XG4gIH1cblxuICAvLyBVc2VyJ3MgbmV3IGluZm8gc2V0dGluZ1xuICBzZXRVc2VySW5mbyh7IG5hbWUsIGRlc2NyaXB0aW9uLCBhdmF0YXIgfSkge1xuICAgIHRoaXMuX25hbWVFbGVtZW50LnRleHRDb250ZW50ID0gbmFtZTtcbiAgICB0aGlzLl9kZXNjcmlwdGlvbkVsZW1lbnQudGV4dENvbnRlbnQgPSBkZXNjcmlwdGlvbjtcbiAgICBpZiAoYXZhdGFyKSB7XG4gICAgICB0aGlzLl9hdmF0YXJFbGVtZW50LnNyYyA9IGF2YXRhcjsgLy8g0L3QtSDRgNCw0LHQvtGC0LDQtdGCINC30LDQvNC10L3QsCDRjdGC0L7QuSDRgdGC0YDQvtC60Lgg0L3QsCDQvNC10YLQvtC0XG4gICAgfVxuICB9XG5cbiAgc2V0TmV3QXZhdGFyKGRhdGEpIHtcbiAgICB0aGlzLl9hdmF0YXJFbGVtZW50LnNyYyA9IGRhdGEuYXZhdGFyO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFVzZXJJbmZvO1xuIl0sIm5hbWVzIjpbImNvbnN0cnVjdG9yIiwiX3JlZiIsImNhcmRTZWxlY3RvciIsImhhbmRsZUltYWdlQ2xpY2siLCJoYW5kbGVMaWtlVG9nZ2xlIiwiaGFuZGxlRGVsZXRlQnV0dG9uIiwiaGFuZGxlQ2FyZERlbGV0ZSIsIm5hbWUiLCJsaW5rIiwiX2lkIiwiaXNMaWtlZCIsInRoaXMiLCJfbmFtZSIsIl9saW5rIiwiX2lzTGlrZWQiLCJfY2FyZFNlbGVjdG9yIiwiX2hhbmRsZUltYWdlQ2xpY2siLCJfaGFuZGxlTGlrZVRvZ2dsZSIsIl9nZXRDYXJkVGVtcGxhdGUiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjb250ZW50IiwiZmlyc3RFbGVtZW50Q2hpbGQiLCJjbG9uZU5vZGUiLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJfbGlrZUJ1dHRvbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJfdHJhc2hCdXR0b24iLCJfY2FyZEltYWdlIiwidXBkYXRlTGlrZVN0YXR1cyIsImNsYXNzTGlzdCIsImFkZCIsInJlbW92ZSIsIl9yZW5kZXJDYXJkIiwiX2NhcmRFbGVtZW50IiwiX2NhcmRUaXRsZSIsInRleHRDb250ZW50Iiwic3JjIiwiYWx0IiwicmVtb3ZlQ2FyZCIsImdldFZpZXciLCJjb25maWciLCJmb3JtIiwiX2Zvcm0iLCJfZm9ybVNlbGVjdG9yIiwiZm9ybVNlbGVjdG9yIiwiX2lucHV0U2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwiX3N1Ym1pdEJ1dHRvblNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJfaW5wdXRFcnJvckNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiX2Vycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwiZW5hYmxlVmFsaWRhdGlvbiIsImV2dCIsInByZXZlbnREZWZhdWx0IiwiX2lucHV0TGlzdCIsIkFycmF5IiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJfc3VibWl0QnV0dG9uIiwiZm9yRWFjaCIsImlucHV0RWxlbWVudCIsIl9jaGVja0lucHV0VmFsaWRpdHkiLCJfdG9nZ2xlQnV0dG9uU3RhdGUiLCJfc2hvd0lucHV0RXJyb3IiLCJlcnJvck1lc3NhZ2UiLCJlcnJvckVsZW1lbnQiLCJpZCIsIl9oaWRlSW5wdXRFcnJvciIsInZhbGlkaXR5IiwidmFsaWQiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsImRpc2FibGVCdXR0b24iLCJkaXNhYmxlZCIsIl9lbmFibGVCdXR0b24iLCJfaGFzSW52YWxpZElucHV0Iiwic29tZSIsInJlc2V0VmFsaWRhdGlvbiIsInZhbHVlIiwiU2VjdGlvbiIsImNvbnRhaW5lciIsIml0ZW1zIiwicmVuZGVyZXIiLCJfaXRlbXMiLCJfY29udGFpbmVyIiwiX3JlbmRlcmVyIiwiY2xlYXIiLCJpbm5lckhUTUwiLCJyZW5kZXJJdGVtcyIsImVsZW1lbnQiLCJhZGRJdGVtIiwicHJlcGVuZCIsInBvcHVwSW1hZ2VTZWxlY3RvciIsImNsb3NlQnV0dG9uU2VsZWN0b3IiLCJwb3B1cCIsImNhcmRzTGlzdFNlbGVjdG9yIiwicHJvZmlsZSIsInByb2ZpbGVNb2RhbCIsInByb2ZpbGVBdmF0YXJDb250YWluZXIiLCJtb2RhbEFkZENhcmQiLCJnZXRFbGVtZW50QnlJZCIsIm1vZGFsSW1hZ2VQcmV2aWV3IiwicHJvZmlsZUJ1dHRvbkVkaXQiLCJhZGRDYXJkQnV0dG9uIiwiZm9ybXMiLCJwb3B1cFNlbGVjdG9yIiwicG9wdXBFbGVtZW50IiwiX2hhbmRsZUVzY0Nsb3NlIiwiYmluZCIsInNldEV2ZW50TGlzdGVuZXJzIiwib3BlbiIsImNsb3NlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImtleSIsInRhcmdldCIsImNvbnRhaW5zIiwiUG9wdXAiLCJoYW5kbGVGb3JtU3VibWl0Iiwic3VwZXIiLCJfcG9wdXBGb3JtIiwiX2RlZmF1bHRCdXR0b25UZXh0IiwiX2hhbmRsZUZvcm1TdWJtaXQiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJyZWR1Y2UiLCJhY2MiLCJpbnB1dCIsInJlbmRlckxvYWRpbmciLCJpc0xvYWRpbmciLCJsb2FkaW5nVGV4dCIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsInNldElucHV0VmFsdWVzIiwiZGF0YSIsImdldEZvcm0iLCJpbnB1dFZhbHVlcyIsImFwaSIsImJhc2VVcmwiLCJoZWFkZXJzIiwiX2Jhc2VVUkwiLCJfaGVhZGVycyIsIl9jaGVja1RoZUFwaVJlc3BvbnNlIiwicmVzIiwib2siLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsInN0YXR1cyIsImdldFVzZXJEYXRhIiwiZmV0Y2giLCJ0aGVuIiwiZWRpdFByb2ZpbGVEYXRhIiwidXNlcklucHV0IiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJhYm91dCIsImRlc2NyaXB0aW9uIiwiZ2V0SW5pdGlhbENhcmRzIiwiYWRkTmV3Q2FyZCIsIm5ld0NhcmQiLCJ0aXRsZSIsInVybCIsImRlbGV0ZUNhcmQiLCJjYXJkSWQiLCJsaWtlQ2FyZCIsImRpc2xpa2VDYXJkIiwiYXZhdGFyVXBkYXRlIiwiYXZhdGFyIiwibG9hZFBhZ2VDb250ZW50IiwicHJvbWlzZXMiLCJhbGwiLCJhdXRob3JpemF0aW9uIiwiY2FyZHNMaXN0IiwiY3JlYXRlQ2FyZCIsIml0ZW0iLCJjYXJkRWxlbWVudCIsIkNhcmQiLCJpbWFnZVBvcHVwIiwiY2F0Y2giLCJlcnIiLCJjb25zb2xlIiwiZXJyb3IiLCJjb25maXJtUG9wdXAiLCJsb2ciLCJpbml0aWFsQ2FyZHMiLCJ1c2VyRGF0YSIsInVzZXJJbmZvIiwic2V0VXNlckluZm8iLCJpbWFnZUVsZW1lbnQiLCJjYXB0aW9uRWxlbWVudCIsInNldENhcmRJZCIsInNldENhcmRFbGVtZW50IiwibmV3Q2FyZFBvcHVwIiwiUG9wdXBXaXRoRm9ybSIsIm5ld1VzZXJDYXJkIiwiZm9ybVZhbGlkYXRvcnMiLCJyZXNldCIsImZpbmFsbHkiLCJ1c2VyUG9wdXBGb3JtIiwibmFtZVNlbGVjdG9yIiwiZGVzY3JpcHRpb25TZWxlY3RvciIsImF2YXRhclNlbGVjdG9yIiwiX25hbWVFbGVtZW50IiwiX2Rlc2NyaXB0aW9uRWxlbWVudCIsIl9hdmF0YXJFbGVtZW50IiwiZ2V0VXNlckluZm8iLCJfcmVmMiIsInNldE5ld0F2YXRhciIsInByb2ZpbGVQaWNQb3B1cCIsImN1cnJlbnRVc2VyRGF0YSIsInZhbGlkYXRvciIsIkZvcm1WYWxpZGF0b3IiLCJmb3JtSWQiLCJnZXRBdHRyaWJ1dGUiXSwic291cmNlUm9vdCI6IiJ9