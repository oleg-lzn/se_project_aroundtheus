!function(){"use strict";var e=class{constructor(e,t,s,r,i,n){let{name:o,link:a,_id:l,isLiked:c}=e;this._name=o,this._link=a,this._isLiked=c,this._id=l,this._cardSelector=t,this._handleImageClick=s,this._handleLikeToggle=r,this.handleCardDelete=n,this.handleDeleteButton=i}_getCardTemplate(){return document.querySelector(this._cardSelector).content.firstElementChild.cloneNode(!0)}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeToggle(this._isLiked)})),this._trashButton.addEventListener("click",(()=>{this.handleDeleteButton(this)})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}updateLikeStatus(e){this._isLiked=e,e?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}_renderCard(){this._cardElement=this._getCardTemplate(),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._cardImage=this._cardElement.querySelector(".card__image"),this._trashButton=this._cardElement.querySelector(".card__delete-button"),this._cardTitle=this._cardElement.querySelector(".card__title"),this._cardTitle.textContent=this._name,this._cardImage.src=this._link,this._cardImage.alt=this._name,this._setEventListeners()}removeCard(){this._cardElement.remove()}getView(){return this._renderCard(),this._cardElement}},t=class{constructor(e,t){this._form=t,this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}_setEventListeners(){this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputList.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}_showInputError(e,t){const s=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),s.classList.add(this._errorClass),s.textContent=t}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?this.disableButton():this._enableButton()}resetValidation(){this._inputList.forEach((e=>{this._hideInputError(e),e.value=""})),this.disableButton()}};class s{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._container=document.querySelector(t),this._renderer=r}clear(){this._container.innerHTML=""}renderItems(){this.clear(),this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}const r={formSelector:".popup__form",inputSelector:".popup__input",popupImageSelector:".popup__image",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible",closeButtonSelector:".popup__close",popup:".popup",cardsListSelector:".cards__list",cardSelector:".card"},i=(document.querySelector("#card-template").content.firstElementChild,document.querySelector(".profile")),n=(i.querySelector(".profile__title"),i.querySelector(".profile__subtitle"),document.querySelector(".popup")),o=(n.querySelector("[name=name]"),n.querySelector("[name=description]"),document.querySelector(".cards__list"),document.querySelector(".profile__avatar_container")),a=document.getElementById("addElement"),l=(a.querySelector("[name=title]"),a.querySelector("[name=url]"),document.getElementById("imageOpen")),c=(l.querySelector(".popup__image"),l.querySelector(".popup__title-small"),i.querySelector(".profile__edit-button")),d=i.querySelector(".profile__add-button");document.forms["new-card-form"],document.forms["profile-form"],document.querySelector(".spinner");var h=class{constructor(e){this.popupSelector=e,this.popupElement=document.querySelector(this.popupSelector),this._handleEscClose=this._handleEscClose.bind(this)}open(){this.popupElement.classList.add("popup_open"),document.addEventListener("keydown",this._handleEscClose)}close(){this.popupElement.classList.remove("popup_open"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this.popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("popup")||e.target.classList.contains("popup__close"))&&this.close()}))}},u=class extends h{constructor(e){let{popupSelector:t,handleFormSubmit:s}=e;super(t),this._popupForm=this.popupElement.querySelector(".popup__form"),this._submitButton=this._popupForm.querySelector(".popup__button"),this._defaultButtonText=this._submitButton.textContent,this._handleFormSubmit=s,this._inputList=Array.from(this._popupForm.querySelectorAll(".popup__input")),this._setEventListeners()}_getInputValues(){return this._inputList.reduce(((e,t)=>{const{name:s,value:r}=t;return e[s]=r,e}),{})}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitButton.textContent=e?t:this._defaultButtonText}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}getForm(){return this._popupForm}_setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this._handleFormSubmit(t)})),super.setEventListeners()}};const p=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseURL=t,this._headers=s}_checkTheApiResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getUserData(){return fetch(`${this._baseURL}/users/me`,{headers:this._headers}).then((e=>this._checkTheApiResponse(e)))}editProfileData(e){return fetch(`${this._baseURL}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.description})}).then((e=>this._checkTheApiResponse(e)))}getInitialCards(){return fetch(`${this._baseURL}/cards`,{headers:this._headers}).then((e=>this._checkTheApiResponse(e)))}addNewCard(e){return fetch(`${this._baseURL}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e.title,link:e.url,isLiked:e.isLiked,_id:e._id})}).then((e=>this._checkTheApiResponse(e)))}deleteCard(e){return fetch(`${this._baseURL}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>this._checkTheApiResponse(e)))}likeCard(e){return fetch(`${this._baseURL}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then((e=>this._checkTheApiResponse(e)))}dislikeCard(e){return fetch(`${this._baseURL}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then((e=>this._checkTheApiResponse(e)))}avatarUpdate(e){return fetch(`${this._baseURL}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.url})}).then((e=>this._checkTheApiResponse(e)))}loadPageContent(){const e=[this.getInitialCards(),this.getUserData()];return Promise.all(e)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"fbd43f39-bc6f-4ff1-b85c-3a8e63a0b02d","Content-Type":"application/json"}});let _;function m(t){const s=new e(t,"#card-template",(function(){E.open(t),E.setEventListeners()}),(function(e){e?p.dislikeCard(t._id).then((e=>{s.updateLikeStatus(e.isLiked)})).catch((e=>console.error(e))):p.likeCard(t._id).then((e=>{s.updateLikeStatus(e.isLiked)})).catch((e=>console.error(e)))}),(function(e){S.open(t._id,e)}),(function(e){console.log(e)}));return s.getView()}p.loadPageContent().then((e=>{let[t,i]=e;L.setUserInfo({name:i.name,description:i.about,avatar:i.avatar}),_=new s({items:t,renderer:e=>{const t=m(e);_.addItem(t)}},r.cardsListSelector),_.renderItems()})).catch((e=>console.error(e)));const E=new class extends h{constructor(e){super(e),this.imageElement=this.popupElement.querySelector(".popup__image"),this.captionElement=this.popupElement.querySelector(".popup__title-small")}open(e){let{link:t,name:s}=e;this.imageElement.src=t,this.imageElement.alt=s,this.captionElement.textContent=s,super.open()}}("#imageOpen"),S=new class extends h{cardId=null;constructor(e){let{popupSelector:t,handleFormSubmit:s}=e;super(t),this._popupForm=this.popupElement.querySelector(".popup__form"),this.handleFormSubmit=s,this._setEventListeners()}_setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this.handleFormSubmit&&"function"==typeof this.handleFormSubmit&&this.handleFormSubmit(this.cardId,this.cardElement)})),super.setEventListeners()}setCardId(e){this.cardId=e}setCardElement(e){this.cardElement=e}open(e,t){this.setCardId(e),this.setCardElement(t),super.open()}}({popupSelector:"#cardDelete",handleFormSubmit:(e,t)=>{p.deleteCard(e).then((()=>{t.removeCard(),S.setCardId(null),S.close(),console.log(e)})).catch((e=>console.error("Error deleting the card",e)))}}),f=new u({popupSelector:"#addElement",handleFormSubmit:e=>{f.renderLoading(!0),p.addNewCard(e).then((e=>{const t=m({name:e.name,link:e.link,_id:e._id,isLiked:e.isLiked});_.addItem(t),g["new-card-form"].disableButton(),f.getForm().reset(),f.close()})).catch((e=>console.error(e))).finally((()=>f.renderLoading(!1)))}});d.addEventListener("click",(()=>{f.open()}));const v=new u({popupSelector:"#profileChange",handleFormSubmit:e=>{v.renderLoading(!0),p.editProfileData(e).then((e=>{L.setUserInfo({name:e.name,description:e.about}),v.close()})).catch((e=>console.error(e))).finally((()=>v.renderLoading(!1)))}}),L=new class{constructor(e){let{nameSelector:t,descriptionSelector:s,avatarSelector:r}=e;this._nameElement=document.querySelector(t),this._descriptionElement=document.querySelector(s),this._avatarElement=document.querySelector(r)}getUserInfo(){return{name:this._nameElement.textContent,description:this._descriptionElement.textContent,avatar:this._avatarElement.src}}setUserInfo(e){let{name:t,description:s,avatar:r}=e;this._nameElement.textContent=t,this._descriptionElement.textContent=s,r&&this.setNewAvatar({avatar:r})}setNewAvatar(e){this._avatarElement.src=e.avatar}}({nameSelector:".profile__title",descriptionSelector:".profile__subtitle",avatarSelector:".profile__avatar"}),b=new u({popupSelector:"#profilePicChange",handleFormSubmit:e=>{b.renderLoading(!0),p.avatarUpdate(e).then((e=>{L.setNewAvatar(e),g["new-card-form"].disableButton(),b.close(),b.getForm().reset()})).catch((e=>console.error(e))).finally((()=>b.renderLoading(!1)))}});o.addEventListener("click",(()=>{b.open()})),c.addEventListener("click",(()=>{g["profile-form"].resetValidation(),v.open();const e=L.getUserInfo();v.setInputValues(e)}));const g={};(e=>{Array.from(document.querySelectorAll(e.formSelector)).forEach((s=>{const r=new t(e,s),i=s.getAttribute("id");g[i]=r,r.enableValidation()}))})(r)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QkFBaUIsU0FBUyxLQUMvQzRMLEVBQWdCckcsTUFBTSxJQUd4QlAsRUFBa0JoRixpQkFBaUIsU0FBUyxLQUMxQytLLEVBQWUsZ0JBQWdCeEgsa0JBQy9CMkgsRUFBYzNGLE9BQ2QsTUFBTXNHLEVBQWtCdkIsRUFBU21CLGNBQ2pDUCxFQUFjcEUsZUFBZStFLEVBQWdCLElBTS9DLE1BQU1kLEVBQWlCLENBQUMsRUFFRWhLLEtBQ1BtQixNQUFNQyxLQUFLMUMsU0FBUzJDLGlCQUFpQnJCLEVBQU9JLGVBQ3BEbUIsU0FBU3RCLElBQ2hCLE1BQU04SyxFQUFZLElBQUlDLEVBQWNoTCxFQUFRQyxHQUN0Q2dMLEVBQVNoTCxFQUFLaUwsYUFBYSxNQUNqQ2xCLEVBQWVpQixHQUFVRixFQUN6QkEsRUFBVWhLLGtCQUFrQixHQUM1QixFQUdKQSxDQUFpQmYsRSIsInNvdXJjZXMiOlsid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvcGFnZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvQXBpLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL0NvbmZEZWxldGVQb3B1cC5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBDYXJkIHtcbiAgY29uc3RydWN0b3IoXG4gICAgeyBuYW1lLCBsaW5rLCBfaWQsIGlzTGlrZWQgfSxcbiAgICBjYXJkU2VsZWN0b3IsXG4gICAgaGFuZGxlSW1hZ2VDbGljayxcbiAgICBoYW5kbGVMaWtlVG9nZ2xlLFxuICAgIGhhbmRsZURlbGV0ZUJ1dHRvbixcbiAgICBoYW5kbGVDYXJkRGVsZXRlXG4gICkge1xuICAgIHRoaXMuX25hbWUgPSBuYW1lO1xuICAgIHRoaXMuX2xpbmsgPSBsaW5rO1xuICAgIHRoaXMuX2lzTGlrZWQgPSBpc0xpa2VkO1xuICAgIHRoaXMuX2lkID0gX2lkO1xuICAgIHRoaXMuX2NhcmRTZWxlY3RvciA9IGNhcmRTZWxlY3RvcjtcbiAgICB0aGlzLl9oYW5kbGVJbWFnZUNsaWNrID0gaGFuZGxlSW1hZ2VDbGljaztcbiAgICB0aGlzLl9oYW5kbGVMaWtlVG9nZ2xlID0gaGFuZGxlTGlrZVRvZ2dsZTtcbiAgICB0aGlzLmhhbmRsZUNhcmREZWxldGUgPSBoYW5kbGVDYXJkRGVsZXRlO1xuICAgIHRoaXMuaGFuZGxlRGVsZXRlQnV0dG9uID0gaGFuZGxlRGVsZXRlQnV0dG9uO1xuICB9XG5cbiAgLy8gQ2FyZCB0ZW1wbGF0ZSBjcmVhdGlvbiBhbmQgY29weWluZ1xuICBfZ2V0Q2FyZFRlbXBsYXRlKCkge1xuICAgIGNvbnN0IGNhcmRUZW1wbGF0ZSA9IGRvY3VtZW50XG4gICAgICAucXVlcnlTZWxlY3Rvcih0aGlzLl9jYXJkU2VsZWN0b3IpXG4gICAgICAuY29udGVudC5maXJzdEVsZW1lbnRDaGlsZC5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgcmV0dXJuIGNhcmRUZW1wbGF0ZTtcbiAgfVxuXG4gIC8vIExpc3RlbmVycyBjcmVhdGlvbiBmdW5jdGlvblxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5fbGlrZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgdGhpcy5faGFuZGxlTGlrZVRvZ2dsZSh0aGlzLl9pc0xpa2VkKTtcbiAgICB9KTtcblxuICAgIC8vRGVsZXRlIGJ1dHRvblxuICAgIHRoaXMuX3RyYXNoQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICB0aGlzLmhhbmRsZURlbGV0ZUJ1dHRvbih0aGlzKTtcbiAgICB9KTtcblxuICAgIC8vSW1hZ2UgaGFuZGxlclxuICAgIHRoaXMuX2NhcmRJbWFnZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgdGhpcy5faGFuZGxlSW1hZ2VDbGljayh7IG5hbWU6IHRoaXMuX25hbWUsIGxpbms6IHRoaXMuX2xpbmsgfSk7XG4gICAgfSk7XG4gIH1cblxuICAvLyBMaWtlIFN0YXR1cyB0b2dnbGVyXG4gIHVwZGF0ZUxpa2VTdGF0dXMoaXNMaWtlZCkge1xuICAgIHRoaXMuX2lzTGlrZWQgPSBpc0xpa2VkO1xuICAgIGlzTGlrZWRcbiAgICAgID8gdGhpcy5fbGlrZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKFwiY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlXCIpXG4gICAgICA6IHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LnJlbW92ZShcImNhcmRfX2xpa2UtYnV0dG9uX2FjdGl2ZVwiKTtcbiAgfVxuXG4gIC8vIENhcmQgY3JlYXRpb24gYW5kIGxpc3RlbmVycyBzZXR0aW5nIGZ1bmN0aW9uXG4gIF9yZW5kZXJDYXJkKCkge1xuICAgIHRoaXMuX2NhcmRFbGVtZW50ID0gdGhpcy5fZ2V0Q2FyZFRlbXBsYXRlKCk7XG4gICAgdGhpcy5fbGlrZUJ1dHRvbiA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fbGlrZS1idXR0b25cIik7XG4gICAgdGhpcy5fY2FyZEltYWdlID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19pbWFnZVwiKTtcbiAgICB0aGlzLl90cmFzaEJ1dHRvbiA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fZGVsZXRlLWJ1dHRvblwiKTtcbiAgICB0aGlzLl9jYXJkVGl0bGUgPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX3RpdGxlXCIpO1xuICAgIHRoaXMuX2NhcmRUaXRsZS50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XG4gICAgdGhpcy5fY2FyZEltYWdlLnNyYyA9IHRoaXMuX2xpbms7XG4gICAgdGhpcy5fY2FyZEltYWdlLmFsdCA9IHRoaXMuX25hbWU7XG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgfVxuXG4gIC8vIENhcmQgUmVtb3ZhbFxuICByZW1vdmVDYXJkKCkge1xuICAgIHRoaXMuX2NhcmRFbGVtZW50LnJlbW92ZSgpO1xuICB9XG5cbiAgLy8gQ2FyZCByZW5kZXJlclxuICBnZXRWaWV3KCkge1xuICAgIHRoaXMuX3JlbmRlckNhcmQoKTtcbiAgICByZXR1cm4gdGhpcy5fY2FyZEVsZW1lbnQ7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQ2FyZDtcbiIsImNsYXNzIEZvcm1WYWxpZGF0b3Ige1xuICBjb25zdHJ1Y3Rvcihjb25maWcsIGZvcm0pIHtcbiAgICB0aGlzLl9mb3JtID0gZm9ybTtcbiAgICB0aGlzLl9mb3JtU2VsZWN0b3IgPSBjb25maWcuZm9ybVNlbGVjdG9yO1xuICAgIHRoaXMuX2lucHV0U2VsZWN0b3IgPSBjb25maWcuaW5wdXRTZWxlY3RvcjtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvciA9IGNvbmZpZy5zdWJtaXRCdXR0b25TZWxlY3RvcjtcbiAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gY29uZmlnLmluYWN0aXZlQnV0dG9uQ2xhc3M7XG4gICAgdGhpcy5faW5wdXRFcnJvckNsYXNzID0gY29uZmlnLmlucHV0RXJyb3JDbGFzcztcbiAgICB0aGlzLl9lcnJvckNsYXNzID0gY29uZmlnLmVycm9yQ2xhc3M7XG4gIH1cblxuICAvLyB1bHRpbWF0ZSBtZXRob2QgZm9yIGZvcm0gdmFsaWRhdGlvblxuICBlbmFibGVWYWxpZGF0aW9uKCkge1xuICAgIHRoaXMuX2Zvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7XG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICB9KTtcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuICB9XG5cbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIC8vIGxvb2sgZm9yIHRoZSBpbnB1dHMgYW5kIHRoZSBzdWJtaXQgYnV0dG9uIGluc2lkZSB0aGUgZm9ybVxuICAgIHRoaXMuX2lucHV0TGlzdCA9IEFycmF5LmZyb20oXG4gICAgICB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5faW5wdXRTZWxlY3RvcilcbiAgICApO1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbiA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3Rvcih0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3Rvcik7XG4gICAgLy9sb29wIHRocm91Z2ggdGhlIGlucHV0cyB0byBzZWUgaWYgYWxsIGlzIHZhbGlkXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoZXZ0KSA9PiB7XG4gICAgICAgIC8vY2hlY2sgaW5wdXQgdmFsaWRpdHlcbiAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCk7XG4gICAgICAgIC8vZGlzYWJsZSB0aGUgYnV0dG9uIGlmIGlucHV0IGlzIG5vdCB2YWxpZFxuICAgICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpOyAvLyBjaGVja1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBfc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50LCBlcnJvck1lc3NhZ2UpIHtcbiAgICAvLyBjaGVjayBzaG91bGQgd2UgcGFzcyBoZXJlIGNvbmZpZ1xuICAgIC8vIGlmIGlucHV0IGlzIG5vdCB2YWxpZCAtIHdlJ2QgbGlrZSB0byB0YWtlIHRoZSB2YWxpZGF0aW9uIG1lc3NhZ2UsXG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKFxuICAgICAgXCIjXCIgKyBgJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYFxuICAgICk7XG4gICAgLy8gQWRkIGVycm9yIGNsYXNzIHRvIHRoZSBpbnB1dCBhbmQgc2hvdyBkaXNwbGF5IGVycm9yIG1lc3NhZ2UuXG4gICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvckNsYXNzKTtcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBlcnJvck1lc3NhZ2U7XG4gIH1cblxuICBfaGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKFxuICAgICAgXCIjXCIgKyBgJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYFxuICAgICk7XG4gICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9lcnJvckNsYXNzKTtcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBcIlwiO1xuICAgIC8vIGlmIGFsbCB0aGUgaW5wdXRzIGFyZSBjb3JyZWN0XG4gICAgLy8gcmVzZXQgZXJyb3IgbWVzc2FnZXNcbiAgfVxuXG4gIF9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KSB7XG4gICAgLy9mb3IgY2hlY2tpbmcgdGhlIGlucHV0IHZhbGlkaXR5XG4gICAgaWYgKCFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcbiAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCwgaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcbiAgICB9XG4gIH1cblxuICAvLyBUb2dnbGluZyB0aGUgYnV0dG9uIHN0YXRlXG4gIGRpc2FibGVCdXR0b24oKSB7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uLmNsYXNzTGlzdC5hZGQodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcbiAgfVxuXG4gIF9lbmFibGVCdXR0b24oKSB7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uLmRpc2FibGVkID0gZmFsc2U7XG4gIH1cblxuICBfaGFzSW52YWxpZElucHV0KCkge1xuICAgIHJldHVybiB0aGlzLl9pbnB1dExpc3Quc29tZSgoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgICByZXR1cm4gIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZDtcbiAgICB9KTtcbiAgfVxuXG4gIF90b2dnbGVCdXR0b25TdGF0ZSgpIHtcbiAgICBpZiAodGhpcy5faGFzSW52YWxpZElucHV0KCkpIHtcbiAgICAgIHRoaXMuZGlzYWJsZUJ1dHRvbigpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9lbmFibGVCdXR0b24oKTtcbiAgICB9XG4gIH1cblxuICByZXNldFZhbGlkYXRpb24oKSB7XG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcbiAgICAgIGlucHV0RWxlbWVudC52YWx1ZSA9IFwiXCI7XG4gICAgfSk7XG4gICAgdGhpcy5kaXNhYmxlQnV0dG9uKCk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRm9ybVZhbGlkYXRvcjtcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xuICBjb25zdHJ1Y3Rvcih7IGl0ZW1zLCByZW5kZXJlciB9LCBjb250YWluZXIpIHtcbiAgICB0aGlzLl9pdGVtcyA9IGl0ZW1zO1xuICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY29udGFpbmVyKTtcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xuICB9XG5cbiAgY2xlYXIoKSB7XG4gICAgdGhpcy5fY29udGFpbmVyLmlubmVySFRNTCA9IFwiXCI7XG4gIH1cblxuICByZW5kZXJJdGVtcygpIHtcbiAgICB0aGlzLmNsZWFyKCk7XG4gICAgdGhpcy5faXRlbXMuZm9yRWFjaCgoZWxlbWVudCkgPT4ge1xuICAgICAgdGhpcy5fcmVuZGVyZXIoZWxlbWVudCk7XG4gICAgfSk7XG4gIH1cblxuICBhZGRJdGVtKGVsZW1lbnQpIHtcbiAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChlbGVtZW50KTtcbiAgfVxufVxuIiwiLy8gICB7XG4vLyAgICAgbmFtZTogXCJZb3NlbWl0ZSBWYWxsZXlcIixcbi8vICAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QveW9zZW1pdGUuanBnXCIsXG4vLyAgIH0sXG5cbi8vICAge1xuLy8gICAgIG5hbWU6IFwiTGFrZSBMb3Vpc2VcIixcbi8vICAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvbGFrZS1sb3Vpc2UuanBnXCIsXG4vLyAgIH0sXG5cbi8vICAge1xuLy8gICAgIG5hbWU6IFwiQmFsZCBNb3VudGFpbnNcIixcbi8vICAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvYmFsZC1tb3VudGFpbnMuanBnXCIsXG4vLyAgIH0sXG5cbi8vICAge1xuLy8gICAgIG5hbWU6IFwiTGF0ZW1hclwiLFxuLy8gICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYXRlbWFyLmpwZ1wiLFxuLy8gICB9LFxuXG4vLyAgIHtcbi8vICAgICBuYW1lOiBcIlZhbm9pc2UgTmF0aW9uYWwgUGFya1wiLFxuLy8gICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC92YW5vaXNlLmpwZ1wiLFxuLy8gICB9LFxuXG4vLyAgIHtcbi8vICAgICBuYW1lOiBcIkxhZ28gZGkgQnJhaWVzXCIsXG4vLyAgICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L2xhZ28uanBnXCIsXG4vLyAgIH0sXG4vLyBdO1xuXG5leHBvcnQgY29uc3QgY29uZmlnID0ge1xuICBmb3JtU2VsZWN0b3I6IFwiLnBvcHVwX19mb3JtXCIsXG4gIGlucHV0U2VsZWN0b3I6IFwiLnBvcHVwX19pbnB1dFwiLFxuICBwb3B1cEltYWdlU2VsZWN0b3I6IFwiLnBvcHVwX19pbWFnZVwiLFxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIucG9wdXBfX2J1dHRvblwiLFxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcInBvcHVwX19idXR0b25fZGlzYWJsZWRcIixcbiAgaW5wdXRFcnJvckNsYXNzOiBcInBvcHVwX19pbnB1dF90eXBlX2Vycm9yXCIsXG4gIGVycm9yQ2xhc3M6IFwicG9wdXBfX2Vycm9yX3Zpc2libGVcIixcbiAgY2xvc2VCdXR0b25TZWxlY3RvcjogXCIucG9wdXBfX2Nsb3NlXCIsXG4gIHBvcHVwOiBcIi5wb3B1cFwiLFxuICBjYXJkc0xpc3RTZWxlY3RvcjogXCIuY2FyZHNfX2xpc3RcIixcbiAgY2FyZFNlbGVjdG9yOiBcIi5jYXJkXCIsXG59O1xuXG4vLyBUZW1wbGF0ZXNcbmV4cG9ydCBjb25zdCBjYXJkVGVtcGxhdGUgPVxuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NhcmQtdGVtcGxhdGVcIikuY29udGVudC5maXJzdEVsZW1lbnRDaGlsZDtcblxuLy8gVmFyaWFibGVzXG5leHBvcnQgY29uc3QgcHJvZmlsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZVwiKTtcbmV4cG9ydCBjb25zdCBwcm9maWxlVGl0bGUgPSBwcm9maWxlLnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fdGl0bGVcIik7XG5leHBvcnQgY29uc3QgcHJvZmlsZVN1YnRpdGxlID0gcHJvZmlsZS5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX3N1YnRpdGxlXCIpO1xuZXhwb3J0IGNvbnN0IHByb2ZpbGVNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBcIik7XG5leHBvcnQgY29uc3QgcHJvZmlsZU1vZGFsSW5wdXROYW1lID0gcHJvZmlsZU1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCJbbmFtZT1uYW1lXVwiKTtcbmV4cG9ydCBjb25zdCBwcm9maWxlTW9kYWxJbnB1dFN1YnRpdGxlID1cbiAgcHJvZmlsZU1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCJbbmFtZT1kZXNjcmlwdGlvbl1cIik7XG5leHBvcnQgY29uc3QgY2FyZHNMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkc19fbGlzdFwiKTtcbmV4cG9ydCBjb25zdCBwcm9maWxlQXZhdGFyQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgXCIucHJvZmlsZV9fYXZhdGFyX2NvbnRhaW5lclwiXG4pO1xuXG4vLyBWYXJpYWJsZXMgZm9yIHRoZSBBZGQgUGxhY2UgTW9kYWxcbmV4cG9ydCBjb25zdCBtb2RhbEFkZENhcmQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImFkZEVsZW1lbnRcIik7XG5leHBvcnQgY29uc3QgbW9kYWxBZGRDYXJkSW5wdXRQbGFjZSA9XG4gIG1vZGFsQWRkQ2FyZC5xdWVyeVNlbGVjdG9yKFwiW25hbWU9dGl0bGVdXCIpO1xuZXhwb3J0IGNvbnN0IG1vZGFsQWRkQ2FyZElucHV0VXJsID0gbW9kYWxBZGRDYXJkLnF1ZXJ5U2VsZWN0b3IoXCJbbmFtZT11cmxdXCIpO1xuXG4vLyBWYXJpYWJsZXMgZm9yIGltYWdlIG1vZGFsXG5leHBvcnQgY29uc3QgbW9kYWxJbWFnZVByZXZpZXcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImltYWdlT3BlblwiKTtcbmV4cG9ydCBjb25zdCBtb2RhbEltYWdlID0gbW9kYWxJbWFnZVByZXZpZXcucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9faW1hZ2VcIik7XG5leHBvcnQgY29uc3QgbW9kYWxUaXRsZVNtYWxsID0gbW9kYWxJbWFnZVByZXZpZXcucXVlcnlTZWxlY3RvcihcbiAgXCIucG9wdXBfX3RpdGxlLXNtYWxsXCJcbik7XG5cbi8vIEJ1dHRvbnNcbmV4cG9ydCBjb25zdCBwcm9maWxlQnV0dG9uRWRpdCA9IHByb2ZpbGUucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19lZGl0LWJ1dHRvblwiKTtcbmV4cG9ydCBjb25zdCBhZGRDYXJkQnV0dG9uID0gcHJvZmlsZS5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2FkZC1idXR0b25cIik7XG5cbi8vIEZvcm1zXG5leHBvcnQgY29uc3QgbW9kYWxBZGRDYXJkRm9ybSA9IGRvY3VtZW50LmZvcm1zW1wibmV3LWNhcmQtZm9ybVwiXTtcbmV4cG9ydCBjb25zdCBwcm9maWxlTW9kYWxGb3JtID0gZG9jdW1lbnQuZm9ybXNbXCJwcm9maWxlLWZvcm1cIl07XG5cbi8vIFNwaW5uZXJcbmV4cG9ydCBjb25zdCBzcGlubmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zcGlubmVyXCIpO1xuIiwiY2xhc3MgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XG4gICAgdGhpcy5wb3B1cFNlbGVjdG9yID0gcG9wdXBTZWxlY3RvcjtcbiAgICB0aGlzLnBvcHVwRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5wb3B1cFNlbGVjdG9yKTtcbiAgICB0aGlzLl9oYW5kbGVFc2NDbG9zZSA9IHRoaXMuX2hhbmRsZUVzY0Nsb3NlLmJpbmQodGhpcyk7XG4gICAgLy8gdGhpcy5zZXRFdmVudExpc3RlbmVycygpO1xuICB9XG5cbiAgb3BlbigpIHtcbiAgICB0aGlzLnBvcHVwRWxlbWVudC5jbGFzc0xpc3QuYWRkKFwicG9wdXBfb3BlblwiKTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICB0aGlzLnBvcHVwRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFwicG9wdXBfb3BlblwiKTtcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gIH1cblxuICBfaGFuZGxlRXNjQ2xvc2UoZXZ0KSB7XG4gICAgaWYgKGV2dC5rZXkgPT09IFwiRXNjYXBlXCIpIHtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9XG4gIH1cblxuICBzZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLnBvcHVwRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIChldnQpID0+IHtcbiAgICAgIGlmIChcbiAgICAgICAgZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJwb3B1cFwiKSB8fFxuICAgICAgICBldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcInBvcHVwX19jbG9zZVwiKVxuICAgICAgKSB7XG4gICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBQb3B1cDtcbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cFwiO1xuXG5jbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcih7IHBvcHVwU2VsZWN0b3IsIGhhbmRsZUZvcm1TdWJtaXQgfSkge1xuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xuICAgIHRoaXMuX3BvcHVwRm9ybSA9IHRoaXMucG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Zvcm1cIik7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uID0gdGhpcy5fcG9wdXBGb3JtLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2J1dHRvblwiKTtcbiAgICB0aGlzLl9kZWZhdWx0QnV0dG9uVGV4dCA9IHRoaXMuX3N1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudDtcbiAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0ID0gaGFuZGxlRm9ybVN1Ym1pdDtcbiAgICB0aGlzLl9pbnB1dExpc3QgPSBBcnJheS5mcm9tKFxuICAgICAgdGhpcy5fcG9wdXBGb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoXCIucG9wdXBfX2lucHV0XCIpXG4gICAgKTtcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuICB9XG5cbiAgLy8gVXNlciBJbnB1dCB2YWx1ZXMgZ2V0dGVyIGFuZCByZXR1cm5pbmcgYW4gb2JqZWN0IHdpdGggdGhlbVxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XG4gICAgY29uc3QgdXNlcklucHV0ID0gdGhpcy5faW5wdXRMaXN0LnJlZHVjZSgoYWNjLCBpbnB1dCkgPT4ge1xuICAgICAgY29uc3QgeyBuYW1lLCB2YWx1ZSB9ID0gaW5wdXQ7XG4gICAgICBhY2NbbmFtZV0gPSB2YWx1ZTtcbiAgICAgIHJldHVybiBhY2M7XG4gICAgfSwge30pO1xuICAgIHJldHVybiB1c2VySW5wdXQ7XG4gIH1cblxuICByZW5kZXJMb2FkaW5nKGlzTG9hZGluZywgbG9hZGluZ1RleHQgPSBcIlNhdmluZy4uLlwiKSB7XG4gICAgaWYgKGlzTG9hZGluZykge1xuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gbG9hZGluZ1RleHQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudCA9IHRoaXMuX2RlZmF1bHRCdXR0b25UZXh0O1xuICAgIH1cbiAgfVxuXG4gIC8vIFVzZXIgaW5wdXQgdmFsdWVzIHNldHRlclxuICBzZXRJbnB1dFZhbHVlcyhkYXRhKSB7XG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0KSA9PiB7XG4gICAgICBpbnB1dC52YWx1ZSA9IGRhdGFbaW5wdXQubmFtZV07XG4gICAgfSk7XG4gIH1cblxuICBnZXRGb3JtKCkge1xuICAgIHJldHVybiB0aGlzLl9wb3B1cEZvcm07XG4gIH1cblxuICAvLyBFdmVudCBMaXN0ZW5lcnMgc2V0dGVyIGFuZCBzdWJtaXQgbG9naWNzXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9wb3B1cEZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7XG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGNvbnN0IGlucHV0VmFsdWVzID0gdGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKTtcbiAgICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQoaW5wdXRWYWx1ZXMpO1xuICAgIH0pO1xuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUG9wdXBXaXRoRm9ybTtcbiIsIi8vIEltcG9ydCBhbGwgdGhlIGNsYXNzZXNcbmltcG9ydCBDYXJkIGZyb20gXCIuLi9jb21wb25lbnRzL0NhcmQuanNcIjtcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcbmltcG9ydCBcIi4uL3BhZ2VzL2luZGV4LmNzc1wiO1xuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xuaW1wb3J0IHtcbiAgYWRkQ2FyZEJ1dHRvbixcbiAgcHJvZmlsZUF2YXRhckNvbnRhaW5lcixcbiAgcHJvZmlsZUJ1dHRvbkVkaXQsXG59IGZyb20gXCIuLi91dGlscy9jb25zdGFudHMuanNcIjtcbmltcG9ydCB7IGNvbmZpZyB9IGZyb20gXCIuLi91dGlscy9jb25zdGFudHMuanNcIjtcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qc1wiO1xuaW1wb3J0IFVzZXJJbmZvIGZyb20gXCIuLi9jb21wb25lbnRzL1VzZXJJbmZvLmpzXCI7XG5pbXBvcnQgQXBpIGZyb20gXCIuLi9jb21wb25lbnRzL0FwaS5qc1wiO1xuaW1wb3J0IENvbmZpcm1EZWxldGVQb3B1cCBmcm9tIFwiLi4vY29tcG9uZW50cy9Db25mRGVsZXRlUG9wdXAuanNcIjtcblxuLy8gQXBpIEluaXRpYWxpemF0aW9uXG5leHBvcnQgY29uc3QgYXBpID0gbmV3IEFwaSh7XG4gIGJhc2VVcmw6IFwiaHR0cHM6Ly9hcm91bmQtYXBpLmVuLnRyaXBsZXRlbi1zZXJ2aWNlcy5jb20vdjFcIixcbiAgaGVhZGVyczoge1xuICAgIGF1dGhvcml6YXRpb246IFwiZmJkNDNmMzktYmM2Zi00ZmYxLWI4NWMtM2E4ZTYzYTBiMDJkXCIsXG4gICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gIH0sXG59KTtcblxuLy8gQ0FSRFMgQU5EIFBBR0UgUkVOREVSSU5HXG4vLyBHZXR0aW5nIHRoZSB1c2VyIGRhdGEgYW5kIHRoZSBpbml0aWFsIGNhcmRzIG9uIHRoZSBpbml0aWFsIHBhZ2UgbG9hZGluZ1xuXG5sZXQgY2FyZHNMaXN0OyAvLyDQv9GA0LDQstC40LvRjNC90L4g0LvQuCDRgtCw0Lo/Pz8g0JHRi9C70L4g0YDQsNC90YzRiNC1INC60LDQuiDQstC90LjQt9GDLCDRgtC10L/QtdGA0YwgQ2FyZHNMaXN0INC+0LHRitGP0LLQu9C10L3QsCDRgtCw0LosINGH0YLQvtCx0Ysg0LjRgdC/0L7Qu9GM0LfQvtCy0LDRgtGM0YHRjyDQsiDQv9C+0L/QsNC/0LVcblxuYXBpXG4gIC5sb2FkUGFnZUNvbnRlbnQoKVxuICAudGhlbigoW2luaXRpYWxDYXJkcywgdXNlckRhdGFdKSA9PiB7XG4gICAgdXNlckluZm8uc2V0VXNlckluZm8oe1xuICAgICAgbmFtZTogdXNlckRhdGEubmFtZSxcbiAgICAgIGRlc2NyaXB0aW9uOiB1c2VyRGF0YS5hYm91dCxcbiAgICAgIGF2YXRhcjogdXNlckRhdGEuYXZhdGFyLFxuICAgIH0pO1xuXG4gICAgY2FyZHNMaXN0ID0gbmV3IFNlY3Rpb24oXG4gICAgICB7XG4gICAgICAgIGl0ZW1zOiBpbml0aWFsQ2FyZHMsXG4gICAgICAgIHJlbmRlcmVyOiAoaXRlbSkgPT4ge1xuICAgICAgICAgIGNvbnN0IG5ld0NhcmQgPSBjcmVhdGVDYXJkKGl0ZW0pO1xuICAgICAgICAgIGNhcmRzTGlzdC5hZGRJdGVtKG5ld0NhcmQpO1xuICAgICAgICB9LFxuICAgICAgfSxcbiAgICAgIGNvbmZpZy5jYXJkc0xpc3RTZWxlY3RvclxuICAgICk7XG5cbiAgICBjYXJkc0xpc3QucmVuZGVySXRlbXMoKTtcbiAgfSlcbiAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUuZXJyb3IoZXJyKSk7XG5cbi8vIENhcmQgY3JlYXRpb24gZnVuY3Rpb25cbmZ1bmN0aW9uIGNyZWF0ZUNhcmQoaXRlbSkge1xuICBmdW5jdGlvbiBoYW5kbGVJbWFnZUNsaWNrKCkge1xuICAgIGltYWdlUG9wdXAub3BlbihpdGVtKTtcbiAgICBpbWFnZVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cbiAgZnVuY3Rpb24gaGFuZGxlTGlrZVRvZ2dsZShpc0xpa2VkKSB7XG4gICAgaWYgKGlzTGlrZWQpIHtcbiAgICAgIGFwaVxuICAgICAgICAuZGlzbGlrZUNhcmQoaXRlbS5faWQpXG4gICAgICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICAgICBjYXJkRWxlbWVudC51cGRhdGVMaWtlU3RhdHVzKHJlcy5pc0xpa2VkKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUuZXJyb3IoZXJyKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaVxuICAgICAgICAubGlrZUNhcmQoaXRlbS5faWQpXG4gICAgICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICAgICBjYXJkRWxlbWVudC51cGRhdGVMaWtlU3RhdHVzKHJlcy5pc0xpa2VkKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUuZXJyb3IoZXJyKSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlRGVsZXRlQnV0dG9uKGNhcmRFbGVtZW50KSB7XG4gICAgY29uZmlybVBvcHVwLm9wZW4oaXRlbS5faWQsIGNhcmRFbGVtZW50KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZUNhcmREZWxldGUoY2FyZElkKSB7XG4gICAgY29uc29sZS5sb2coY2FyZElkKTtcbiAgfVxuXG4gIGNvbnN0IGNhcmRFbGVtZW50ID0gbmV3IENhcmQoXG4gICAgaXRlbSxcbiAgICBcIiNjYXJkLXRlbXBsYXRlXCIsXG4gICAgLy8gaW1hZ2UgcG9wdXAgY2FsbGJhY2tcbiAgICBoYW5kbGVJbWFnZUNsaWNrLFxuICAgIC8vIGxpa2UgaGFuZGxlciBjYWxsYmFja1xuICAgIGhhbmRsZUxpa2VUb2dnbGUsXG4gICAgLy8gZGVsZXRlIHBvcHVwIG9wZW4gaGFuZGxlclxuICAgIGhhbmRsZURlbGV0ZUJ1dHRvbixcbiAgICAvLyBkZWxldGUgcG9wdXAgc3VibWl0IGhhbmRsZXJcbiAgICBoYW5kbGVDYXJkRGVsZXRlXG4gICk7XG4gIHJldHVybiBjYXJkRWxlbWVudC5nZXRWaWV3KCk7XG59XG5cbi8vIFBPUFVQU1xuXG4vLyBDcmVhdGluZyBhIGNhcmQgaW1hZ2UgcG9wdXBcbmNvbnN0IGltYWdlUG9wdXAgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoXCIjaW1hZ2VPcGVuXCIpO1xuXG4vLyBDYXJkIGRlbGV0ZSBjb25maXJtYXRpb24gcG9wdXBcbmNvbnN0IGNvbmZpcm1Qb3B1cCA9IG5ldyBDb25maXJtRGVsZXRlUG9wdXAoe1xuICBwb3B1cFNlbGVjdG9yOiBcIiNjYXJkRGVsZXRlXCIsXG4gIGhhbmRsZUZvcm1TdWJtaXQ6IChjYXJkSWQsIGNhcmRFbGVtZW50KSA9PiB7XG4gICAgLy8gY29uc29sZS5sb2coY2FyZElkKTtcbiAgICBhcGlcbiAgICAgIC5kZWxldGVDYXJkKGNhcmRJZClcbiAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgY2FyZEVsZW1lbnQucmVtb3ZlQ2FyZCgpO1xuICAgICAgICBjb25maXJtUG9wdXAuc2V0Q2FyZElkKG51bGwpO1xuICAgICAgICBjb25maXJtUG9wdXAuY2xvc2UoKTtcbiAgICAgICAgY29uc29sZS5sb2coY2FyZElkKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5lcnJvcihcIkVycm9yIGRlbGV0aW5nIHRoZSBjYXJkXCIsIGVycikpO1xuICB9LCAvLyDQsiDQutC+0LvQsdGN0Log0L3QsNC00L4g0L/QtdGA0LXQtNCw0LLQsNGC0Ywg0LjQvdGE0L7RgNC80LDRhtC40Y4g0L4g0YLQvtC8LCDQutCw0LrQsNGPINC60LDRgNGC0L7Rh9C60LAg0LHRg9C00LXRgiDRg9C00LDQu9C10L3QsFxufSk7XG5cbi8vIENyZWF0aW5nIGEgcG9wdXAgd2l0aCBhZGQgY2FyZCBmb3JtXG5jb25zdCBuZXdDYXJkUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybSh7XG4gIHBvcHVwU2VsZWN0b3I6IFwiI2FkZEVsZW1lbnRcIixcbiAgaGFuZGxlRm9ybVN1Ym1pdDogKHVzZXJJbnB1dCkgPT4ge1xuICAgIG5ld0NhcmRQb3B1cC5yZW5kZXJMb2FkaW5nKHRydWUpO1xuICAgIGFwaVxuICAgICAgLmFkZE5ld0NhcmQodXNlcklucHV0KVxuICAgICAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgICAgY29uc3QgbmV3VXNlckNhcmQgPSBjcmVhdGVDYXJkKHtcbiAgICAgICAgICBuYW1lOiBkYXRhLm5hbWUsXG4gICAgICAgICAgbGluazogZGF0YS5saW5rLFxuICAgICAgICAgIF9pZDogZGF0YS5faWQsIC8vINCg0LDQt9C+0LHRgNCw0YLRjNGB0Y8g0YEg0L/QtdGA0LXQtNCw0YfQtdC5INC00LDQvdC90YvRhSDQv9GA0Lgg0YHQvtC30LTQsNC90LjQuCDQutCw0YDRgtC+0YfQutC4XG4gICAgICAgICAgaXNMaWtlZDogZGF0YS5pc0xpa2VkLFxuICAgICAgICB9KTtcbiAgICAgICAgY2FyZHNMaXN0LmFkZEl0ZW0obmV3VXNlckNhcmQpOyAvLyDQt9C00LXRgdGMINC60L7QvdGC0LXQudC90LXRgCDQsiDRgdGC0LDRgtGD0YHQtSB1bmRlZmluZWQsINC/0L7RgtC+0LzRgyDRh9GC0L4g0L7QvSDQvdC1INCyINCz0LvQvtCx0LDQu9GM0L3QvtC8INGB0LrQvtGD0L/QtVxuICAgICAgICBmb3JtVmFsaWRhdG9yc1tcIm5ldy1jYXJkLWZvcm1cIl0uZGlzYWJsZUJ1dHRvbigpO1xuICAgICAgICBuZXdDYXJkUG9wdXAuZ2V0Rm9ybSgpLnJlc2V0KCk7XG4gICAgICAgIG5ld0NhcmRQb3B1cC5jbG9zZSgpO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmVycm9yKGVycikpXG4gICAgICAuZmluYWxseSgoKSA9PiBuZXdDYXJkUG9wdXAucmVuZGVyTG9hZGluZyhmYWxzZSkpO1xuICB9LFxufSk7XG5cbi8vIEFkZCBuZXcgY2FyZCBidXR0b24gaGFuZGxlclxuYWRkQ2FyZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICBuZXdDYXJkUG9wdXAub3BlbigpO1xufSk7XG5cbi8vIFVzZXJJbmZvIFBvcHVwXG5jb25zdCB1c2VyUG9wdXBGb3JtID0gbmV3IFBvcHVwV2l0aEZvcm0oe1xuICBwb3B1cFNlbGVjdG9yOiBcIiNwcm9maWxlQ2hhbmdlXCIsXG4gIGhhbmRsZUZvcm1TdWJtaXQ6ICh1c2VySW5wdXQpID0+IHtcbiAgICB1c2VyUG9wdXBGb3JtLnJlbmRlckxvYWRpbmcodHJ1ZSk7XG4gICAgYXBpXG4gICAgICAuZWRpdFByb2ZpbGVEYXRhKHVzZXJJbnB1dClcbiAgICAgIC50aGVuKChkYXRhKSA9PiB7XG4gICAgICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKHtcbiAgICAgICAgICBuYW1lOiBkYXRhLm5hbWUsXG4gICAgICAgICAgZGVzY3JpcHRpb246IGRhdGEuYWJvdXQsXG4gICAgICAgIH0pO1xuICAgICAgICB1c2VyUG9wdXBGb3JtLmNsb3NlKCk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUuZXJyb3IoZXJyKSlcbiAgICAgIC5maW5hbGx5KCgpID0+IHVzZXJQb3B1cEZvcm0ucmVuZGVyTG9hZGluZyhmYWxzZSkpO1xuICB9LFxufSk7XG5cbi8vIFBST0ZJTEUgSU5GTyBDSEFOR0VTXG5cbi8vIFVzZXIgSW5mbyBhbmQgQXZhdGFyIENoYW5nZVxuY29uc3QgdXNlckluZm8gPSBuZXcgVXNlckluZm8oe1xuICBuYW1lU2VsZWN0b3I6IFwiLnByb2ZpbGVfX3RpdGxlXCIsXG4gIGRlc2NyaXB0aW9uU2VsZWN0b3I6IFwiLnByb2ZpbGVfX3N1YnRpdGxlXCIsXG4gIGF2YXRhclNlbGVjdG9yOiBcIi5wcm9maWxlX19hdmF0YXJcIixcbn0pO1xuXG4vL1Byb2ZpbGUgQXZhdGFyIENoYW5nZVxuY29uc3QgcHJvZmlsZVBpY1BvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oe1xuICBwb3B1cFNlbGVjdG9yOiBcIiNwcm9maWxlUGljQ2hhbmdlXCIsXG4gIGhhbmRsZUZvcm1TdWJtaXQ6IChpbnB1dFZhbHVlcykgPT4ge1xuICAgIHByb2ZpbGVQaWNQb3B1cC5yZW5kZXJMb2FkaW5nKHRydWUpO1xuICAgIGFwaVxuICAgICAgLmF2YXRhclVwZGF0ZShpbnB1dFZhbHVlcylcbiAgICAgIC50aGVuKChkYXRhKSA9PiB7XG4gICAgICAgIHVzZXJJbmZvLnNldE5ld0F2YXRhcihkYXRhKTtcbiAgICAgICAgZm9ybVZhbGlkYXRvcnNbXCJuZXctY2FyZC1mb3JtXCJdLmRpc2FibGVCdXR0b24oKTtcbiAgICAgICAgcHJvZmlsZVBpY1BvcHVwLmNsb3NlKCk7XG4gICAgICAgIHByb2ZpbGVQaWNQb3B1cC5nZXRGb3JtKCkucmVzZXQoKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5lcnJvcihlcnIpKVxuICAgICAgLmZpbmFsbHkoKCkgPT4gcHJvZmlsZVBpY1BvcHVwLnJlbmRlckxvYWRpbmcoZmFsc2UpKTtcbiAgfSxcbn0pO1xuXG5wcm9maWxlQXZhdGFyQ29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIHByb2ZpbGVQaWNQb3B1cC5vcGVuKCk7XG59KTtcblxucHJvZmlsZUJ1dHRvbkVkaXQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgZm9ybVZhbGlkYXRvcnNbXCJwcm9maWxlLWZvcm1cIl0ucmVzZXRWYWxpZGF0aW9uKCk7XG4gIHVzZXJQb3B1cEZvcm0ub3BlbigpO1xuICBjb25zdCBjdXJyZW50VXNlckRhdGEgPSB1c2VySW5mby5nZXRVc2VySW5mbygpO1xuICB1c2VyUG9wdXBGb3JtLnNldElucHV0VmFsdWVzKGN1cnJlbnRVc2VyRGF0YSk7XG59KTtcblxuLy9WQUxJREFUSU9OXG5cbi8vIFVuaXZlcnNhbCBoYW5kbGVyIGZvciBmb3JtcyB2YWxpZGF0aW9uXG5jb25zdCBmb3JtVmFsaWRhdG9ycyA9IHt9O1xuXG5jb25zdCBlbmFibGVWYWxpZGF0aW9uID0gKGNvbmZpZykgPT4ge1xuICBjb25zdCBmb3JtTGlzdCA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChjb25maWcuZm9ybVNlbGVjdG9yKSk7XG4gIGZvcm1MaXN0LmZvckVhY2goKGZvcm0pID0+IHtcbiAgICBjb25zdCB2YWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihjb25maWcsIGZvcm0pO1xuICAgIGNvbnN0IGZvcm1JZCA9IGZvcm0uZ2V0QXR0cmlidXRlKFwiaWRcIik7XG4gICAgZm9ybVZhbGlkYXRvcnNbZm9ybUlkXSA9IHZhbGlkYXRvcjtcbiAgICB2YWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xuICB9KTtcbn07XG5cbmVuYWJsZVZhbGlkYXRpb24oY29uZmlnKTtcblxuZXhwb3J0IGRlZmF1bHQgY29uZmlybVBvcHVwO1xuIiwiY2xhc3MgQXBpIHtcbiAgY29uc3RydWN0b3IoeyBiYXNlVXJsLCBoZWFkZXJzIH0pIHtcbiAgICB0aGlzLl9iYXNlVVJMID0gYmFzZVVybDtcbiAgICB0aGlzLl9oZWFkZXJzID0gaGVhZGVycztcbiAgfVxuXG4gIF9jaGVja1RoZUFwaVJlc3BvbnNlKHJlcykge1xuICAgIGlmIChyZXMub2spIHtcbiAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgIH0gZWxzZSByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XG4gIH1cblxuICBnZXRVc2VyRGF0YSgpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVSTH0vdXNlcnMvbWVgLCB7XG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pLnRoZW4oKHJlcykgPT4gdGhpcy5fY2hlY2tUaGVBcGlSZXNwb25zZShyZXMpKTtcbiAgfVxuXG4gIGVkaXRQcm9maWxlRGF0YSh1c2VySW5wdXQpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVSTH0vdXNlcnMvbWVgLCB7XG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIG5hbWU6IHVzZXJJbnB1dC5uYW1lLFxuICAgICAgICBhYm91dDogdXNlcklucHV0LmRlc2NyaXB0aW9uLFxuICAgICAgfSksXG4gICAgfSkudGhlbigocmVzKSA9PiB0aGlzLl9jaGVja1RoZUFwaVJlc3BvbnNlKHJlcykpO1xuICB9XG5cbiAgZ2V0SW5pdGlhbENhcmRzKCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVVJMfS9jYXJkc2AsIHtcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgfSkudGhlbigocmVzKSA9PiB0aGlzLl9jaGVja1RoZUFwaVJlc3BvbnNlKHJlcykpO1xuICB9XG5cbiAgYWRkTmV3Q2FyZChuZXdDYXJkKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVUkx9L2NhcmRzYCwge1xuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIG5hbWU6IG5ld0NhcmQudGl0bGUsXG4gICAgICAgIGxpbms6IG5ld0NhcmQudXJsLFxuICAgICAgICBpc0xpa2VkOiBuZXdDYXJkLmlzTGlrZWQsXG4gICAgICAgIF9pZDogbmV3Q2FyZC5faWQsXG4gICAgICB9KSxcbiAgICB9KS50aGVuKChyZXMpID0+IHRoaXMuX2NoZWNrVGhlQXBpUmVzcG9uc2UocmVzKSk7XG4gIH1cblxuICBkZWxldGVDYXJkKGNhcmRJZCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVVJMfS9jYXJkcy8ke2NhcmRJZH1gLCB7XG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pLnRoZW4oKHJlcykgPT4gdGhpcy5fY2hlY2tUaGVBcGlSZXNwb25zZShyZXMpKTtcbiAgfVxuXG4gIGxpa2VDYXJkKGNhcmRJZCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVVJMfS9jYXJkcy8ke2NhcmRJZH0vbGlrZXNgLCB7XG4gICAgICBtZXRob2Q6IFwiUFVUXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pLnRoZW4oKHJlcykgPT4gdGhpcy5fY2hlY2tUaGVBcGlSZXNwb25zZShyZXMpKTtcbiAgfVxuXG4gIGRpc2xpa2VDYXJkKGNhcmRJZCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVVJMfS9jYXJkcy8ke2NhcmRJZH0vbGlrZXNgLCB7XG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pLnRoZW4oKHJlcykgPT4gdGhpcy5fY2hlY2tUaGVBcGlSZXNwb25zZShyZXMpKTtcbiAgfVxuXG4gIGF2YXRhclVwZGF0ZShpbnB1dFZhbHVlcykge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVVJMfS91c2Vycy9tZS9hdmF0YXJgLCB7XG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIGF2YXRhcjogaW5wdXRWYWx1ZXMudXJsLFxuICAgICAgfSksXG4gICAgfSkudGhlbigocmVzKSA9PiB0aGlzLl9jaGVja1RoZUFwaVJlc3BvbnNlKHJlcykpO1xuICB9XG5cbiAgbG9hZFBhZ2VDb250ZW50KCkge1xuICAgIGNvbnN0IHByb21pc2VzID0gW3RoaXMuZ2V0SW5pdGlhbENhcmRzKCksIHRoaXMuZ2V0VXNlckRhdGEoKV07XG4gICAgcmV0dXJuIFByb21pc2UuYWxsKHByb21pc2VzKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBBcGk7XG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXBcIjtcblxuY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcbiAgICB0aGlzLmltYWdlRWxlbWVudCA9IHRoaXMucG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2ltYWdlXCIpO1xuICAgIHRoaXMuY2FwdGlvbkVsZW1lbnQgPSB0aGlzLnBvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgXCIucG9wdXBfX3RpdGxlLXNtYWxsXCJcbiAgICApO1xuICB9XG5cbiAgb3Blbih7IGxpbmssIG5hbWUgfSkge1xuICAgIHRoaXMuaW1hZ2VFbGVtZW50LnNyYyA9IGxpbms7XG4gICAgdGhpcy5pbWFnZUVsZW1lbnQuYWx0ID0gbmFtZTtcbiAgICB0aGlzLmNhcHRpb25FbGVtZW50LnRleHRDb250ZW50ID0gbmFtZTtcbiAgICBzdXBlci5vcGVuKCk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUG9wdXBXaXRoSW1hZ2U7XG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXBcIjtcblxuY2xhc3MgQ29uZmlybURlbGV0ZVBvcHVwIGV4dGVuZHMgUG9wdXAge1xuICBjYXJkSWQgPSBudWxsO1xuICBjb25zdHJ1Y3Rvcih7IHBvcHVwU2VsZWN0b3IsIGhhbmRsZUZvcm1TdWJtaXQgfSkge1xuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xuICAgIHRoaXMuX3BvcHVwRm9ybSA9IHRoaXMucG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Zvcm1cIik7XG4gICAgdGhpcy5oYW5kbGVGb3JtU3VibWl0ID0gaGFuZGxlRm9ybVN1Ym1pdDtcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuICB9XG5cbiAgLy8gRXZlbnQgTGlzdGVuZXJzIHNldHRlciBhbmQgc3VibWl0IGxvZ2ljc1xuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5fcG9wdXBGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBpZiAoXG4gICAgICAgIHRoaXMuaGFuZGxlRm9ybVN1Ym1pdCAmJlxuICAgICAgICB0eXBlb2YgdGhpcy5oYW5kbGVGb3JtU3VibWl0ID09PSBcImZ1bmN0aW9uXCJcbiAgICAgICkge1xuICAgICAgICAvLyDQt9C00LXRgdGMINC00L7Qu9C20L3QsCDQv9C+0LTRgtGP0LPQuNCy0LDRgtGM0YHRjyDQuNC90YTQvtGA0LzQsNGG0LjRjyDQviDQutCw0YDRgtC+0YfQutC1LCDQutC+0YLQvtGA0LDRjyDQsdGD0LTQtdGCINGD0LTQsNC70LXQvdCwXG4gICAgICAgIHRoaXMuaGFuZGxlRm9ybVN1Ym1pdCh0aGlzLmNhcmRJZCwgdGhpcy5jYXJkRWxlbWVudCk7IC8vINGB0Y7QtNCwINC90LDQtNC+INC/0LXRgNC10LTQsNCy0LDRgtGMINC40L3RhNC+0YDQvNCw0YbQuNGOINC+INC60LDRgNGC0L7Rh9C60LVcbiAgICAgICAgLy8gdGhpcy5zZXRDYXJkSWQobnVsbCk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgfVxuXG4gIHNldENhcmRJZChjYXJkSWQpIHtcbiAgICB0aGlzLmNhcmRJZCA9IGNhcmRJZDtcbiAgfVxuXG4gIHNldENhcmRFbGVtZW50KGNhcmRFbGVtZW50KSB7XG4gICAgdGhpcy5jYXJkRWxlbWVudCA9IGNhcmRFbGVtZW50O1xuICB9XG5cbiAgb3BlbihjYXJkSWQsIGNhcmRFbGVtZW50KSB7XG4gICAgdGhpcy5zZXRDYXJkSWQoY2FyZElkKTtcbiAgICB0aGlzLnNldENhcmRFbGVtZW50KGNhcmRFbGVtZW50KTtcbiAgICBzdXBlci5vcGVuKCk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQ29uZmlybURlbGV0ZVBvcHVwO1xuIiwiY2xhc3MgVXNlckluZm8ge1xuICBjb25zdHJ1Y3Rvcih7IG5hbWVTZWxlY3RvciwgZGVzY3JpcHRpb25TZWxlY3RvciwgYXZhdGFyU2VsZWN0b3IgfSkge1xuICAgIHRoaXMuX25hbWVFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihuYW1lU2VsZWN0b3IpO1xuICAgIHRoaXMuX2Rlc2NyaXB0aW9uRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZGVzY3JpcHRpb25TZWxlY3Rvcik7XG4gICAgdGhpcy5fYXZhdGFyRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYXZhdGFyU2VsZWN0b3IpO1xuICB9XG5cbiAgLy8gVXNlciBDdXJyZW50IEluZm8gZ2V0dGVyXG4gIGdldFVzZXJJbmZvKCkge1xuICAgIHJldHVybiB7XG4gICAgICBuYW1lOiB0aGlzLl9uYW1lRWxlbWVudC50ZXh0Q29udGVudCxcbiAgICAgIGRlc2NyaXB0aW9uOiB0aGlzLl9kZXNjcmlwdGlvbkVsZW1lbnQudGV4dENvbnRlbnQsXG4gICAgICBhdmF0YXI6IHRoaXMuX2F2YXRhckVsZW1lbnQuc3JjLFxuICAgIH07XG4gIH1cblxuICAvLyBVc2VyJ3MgbmV3IGluZm8gc2V0dGluZ1xuICBzZXRVc2VySW5mbyh7IG5hbWUsIGRlc2NyaXB0aW9uLCBhdmF0YXIgfSkge1xuICAgIHRoaXMuX25hbWVFbGVtZW50LnRleHRDb250ZW50ID0gbmFtZTtcbiAgICB0aGlzLl9kZXNjcmlwdGlvbkVsZW1lbnQudGV4dENvbnRlbnQgPSBkZXNjcmlwdGlvbjtcbiAgICBpZiAoYXZhdGFyKSB7XG4gICAgICAvLyB0aGlzLl9hdmF0YXJFbGVtZW50LnNyYyA9IGF2YXRhcjtcbiAgICAgIHRoaXMuc2V0TmV3QXZhdGFyKHsgYXZhdGFyIH0pOyAvLyDQvdC1INGA0LDQsdC+0YLQsNC10YIg0LfQsNC80LXQvdCwINGN0YLQvtC5INGB0YLRgNC+0LrQuCDQvdCwINC80LXRgtC+0LRcbiAgICB9XG4gIH1cblxuICBzZXROZXdBdmF0YXIoZGF0YSkge1xuICAgIHRoaXMuX2F2YXRhckVsZW1lbnQuc3JjID0gZGF0YS5hdmF0YXI7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgVXNlckluZm87XG4iXSwibmFtZXMiOlsiY29uc3RydWN0b3IiLCJfcmVmIiwiY2FyZFNlbGVjdG9yIiwiaGFuZGxlSW1hZ2VDbGljayIsImhhbmRsZUxpa2VUb2dnbGUiLCJoYW5kbGVEZWxldGVCdXR0b24iLCJoYW5kbGVDYXJkRGVsZXRlIiwibmFtZSIsImxpbmsiLCJfaWQiLCJpc0xpa2VkIiwidGhpcyIsIl9uYW1lIiwiX2xpbmsiLCJfaXNMaWtlZCIsIl9jYXJkU2VsZWN0b3IiLCJfaGFuZGxlSW1hZ2VDbGljayIsIl9oYW5kbGVMaWtlVG9nZ2xlIiwiX2dldENhcmRUZW1wbGF0ZSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImNvbnRlbnQiLCJmaXJzdEVsZW1lbnRDaGlsZCIsImNsb25lTm9kZSIsIl9zZXRFdmVudExpc3RlbmVycyIsIl9saWtlQnV0dG9uIiwiYWRkRXZlbnRMaXN0ZW5lciIsIl90cmFzaEJ1dHRvbiIsIl9jYXJkSW1hZ2UiLCJ1cGRhdGVMaWtlU3RhdHVzIiwiY2xhc3NMaXN0IiwiYWRkIiwicmVtb3ZlIiwiX3JlbmRlckNhcmQiLCJfY2FyZEVsZW1lbnQiLCJfY2FyZFRpdGxlIiwidGV4dENvbnRlbnQiLCJzcmMiLCJhbHQiLCJyZW1vdmVDYXJkIiwiZ2V0VmlldyIsImNvbmZpZyIsImZvcm0iLCJfZm9ybSIsIl9mb3JtU2VsZWN0b3IiLCJmb3JtU2VsZWN0b3IiLCJfaW5wdXRTZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uU2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsIl9pbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsIl9pbnB1dEVycm9yQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJfZXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJlbmFibGVWYWxpZGF0aW9uIiwiZXZ0IiwicHJldmVudERlZmF1bHQiLCJfaW5wdXRMaXN0IiwiQXJyYXkiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsIl9zdWJtaXRCdXR0b24iLCJmb3JFYWNoIiwiaW5wdXRFbGVtZW50IiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsIl90b2dnbGVCdXR0b25TdGF0ZSIsIl9zaG93SW5wdXRFcnJvciIsImVycm9yTWVzc2FnZSIsImVycm9yRWxlbWVudCIsImlkIiwiX2hpZGVJbnB1dEVycm9yIiwidmFsaWRpdHkiLCJ2YWxpZCIsInZhbGlkYXRpb25NZXNzYWdlIiwiZGlzYWJsZUJ1dHRvbiIsImRpc2FibGVkIiwiX2VuYWJsZUJ1dHRvbiIsIl9oYXNJbnZhbGlkSW5wdXQiLCJzb21lIiwicmVzZXRWYWxpZGF0aW9uIiwidmFsdWUiLCJTZWN0aW9uIiwiY29udGFpbmVyIiwiaXRlbXMiLCJyZW5kZXJlciIsIl9pdGVtcyIsIl9jb250YWluZXIiLCJfcmVuZGVyZXIiLCJjbGVhciIsImlubmVySFRNTCIsInJlbmRlckl0ZW1zIiwiZWxlbWVudCIsImFkZEl0ZW0iLCJwcmVwZW5kIiwicG9wdXBJbWFnZVNlbGVjdG9yIiwiY2xvc2VCdXR0b25TZWxlY3RvciIsInBvcHVwIiwiY2FyZHNMaXN0U2VsZWN0b3IiLCJwcm9maWxlIiwicHJvZmlsZU1vZGFsIiwicHJvZmlsZUF2YXRhckNvbnRhaW5lciIsIm1vZGFsQWRkQ2FyZCIsImdldEVsZW1lbnRCeUlkIiwibW9kYWxJbWFnZVByZXZpZXciLCJwcm9maWxlQnV0dG9uRWRpdCIsImFkZENhcmRCdXR0b24iLCJmb3JtcyIsInBvcHVwU2VsZWN0b3IiLCJwb3B1cEVsZW1lbnQiLCJfaGFuZGxlRXNjQ2xvc2UiLCJiaW5kIiwib3BlbiIsImNsb3NlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImtleSIsInNldEV2ZW50TGlzdGVuZXJzIiwidGFyZ2V0IiwiY29udGFpbnMiLCJQb3B1cCIsImhhbmRsZUZvcm1TdWJtaXQiLCJzdXBlciIsIl9wb3B1cEZvcm0iLCJfZGVmYXVsdEJ1dHRvblRleHQiLCJfaGFuZGxlRm9ybVN1Ym1pdCIsIl9nZXRJbnB1dFZhbHVlcyIsInJlZHVjZSIsImFjYyIsImlucHV0IiwicmVuZGVyTG9hZGluZyIsImlzTG9hZGluZyIsImxvYWRpbmdUZXh0IiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwic2V0SW5wdXRWYWx1ZXMiLCJkYXRhIiwiZ2V0Rm9ybSIsImlucHV0VmFsdWVzIiwiYXBpIiwiYmFzZVVybCIsImhlYWRlcnMiLCJfYmFzZVVSTCIsIl9oZWFkZXJzIiwiX2NoZWNrVGhlQXBpUmVzcG9uc2UiLCJyZXMiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzIiwiZ2V0VXNlckRhdGEiLCJmZXRjaCIsInRoZW4iLCJlZGl0UHJvZmlsZURhdGEiLCJ1c2VySW5wdXQiLCJtZXRob2QiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsImFib3V0IiwiZGVzY3JpcHRpb24iLCJnZXRJbml0aWFsQ2FyZHMiLCJhZGROZXdDYXJkIiwibmV3Q2FyZCIsInRpdGxlIiwidXJsIiwiZGVsZXRlQ2FyZCIsImNhcmRJZCIsImxpa2VDYXJkIiwiZGlzbGlrZUNhcmQiLCJhdmF0YXJVcGRhdGUiLCJhdmF0YXIiLCJsb2FkUGFnZUNvbnRlbnQiLCJwcm9taXNlcyIsImFsbCIsImF1dGhvcml6YXRpb24iLCJjYXJkc0xpc3QiLCJjcmVhdGVDYXJkIiwiaXRlbSIsImNhcmRFbGVtZW50IiwiQ2FyZCIsImltYWdlUG9wdXAiLCJjYXRjaCIsImVyciIsImNvbnNvbGUiLCJlcnJvciIsImNvbmZpcm1Qb3B1cCIsImxvZyIsImluaXRpYWxDYXJkcyIsInVzZXJEYXRhIiwidXNlckluZm8iLCJzZXRVc2VySW5mbyIsImltYWdlRWxlbWVudCIsImNhcHRpb25FbGVtZW50Iiwic2V0Q2FyZElkIiwic2V0Q2FyZEVsZW1lbnQiLCJuZXdDYXJkUG9wdXAiLCJQb3B1cFdpdGhGb3JtIiwibmV3VXNlckNhcmQiLCJmb3JtVmFsaWRhdG9ycyIsInJlc2V0IiwiZmluYWxseSIsInVzZXJQb3B1cEZvcm0iLCJuYW1lU2VsZWN0b3IiLCJkZXNjcmlwdGlvblNlbGVjdG9yIiwiYXZhdGFyU2VsZWN0b3IiLCJfbmFtZUVsZW1lbnQiLCJfZGVzY3JpcHRpb25FbGVtZW50IiwiX2F2YXRhckVsZW1lbnQiLCJnZXRVc2VySW5mbyIsIl9yZWYyIiwic2V0TmV3QXZhdGFyIiwicHJvZmlsZVBpY1BvcHVwIiwiY3VycmVudFVzZXJEYXRhIiwidmFsaWRhdG9yIiwiRm9ybVZhbGlkYXRvciIsImZvcm1JZCIsImdldEF0dHJpYnV0ZSJdLCJzb3VyY2VSb290IjoiIn0=